/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["app/articles/page"],{

/***/ "(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkiendang%2FGit%2Fdev-blog%2Fapp%2Farticles%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkiendang%2FGit%2Fdev-blog%2Fapp%2Farticles%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false! ***!
  \*********************************************************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("Promise.resolve(/*! import() eager */).then(__webpack_require__.bind(__webpack_require__, /*! ./app/articles/page.tsx */ \"(app-pages-browser)/./app/articles/page.tsx\"));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvYnVpbGQvd2VicGFjay9sb2FkZXJzL25leHQtZmxpZ2h0LWNsaWVudC1lbnRyeS1sb2FkZXIuanM/bW9kdWxlcz0lN0IlMjJyZXF1ZXN0JTIyJTNBJTIyJTJGVXNlcnMlMkZraWVuZGFuZyUyRkdpdCUyRmRldi1ibG9nJTJGYXBwJTJGYXJ0aWNsZXMlMkZwYWdlLnRzeCUyMiUyQyUyMmlkcyUyMiUzQSU1QiU1RCU3RCZzZXJ2ZXI9ZmFsc2UhIiwibWFwcGluZ3MiOiJBQUFBLHdLQUF1RiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvPzk2MmUiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0KC8qIHdlYnBhY2tNb2RlOiBcImVhZ2VyXCIgKi8gXCIvVXNlcnMva2llbmRhbmcvR2l0L2Rldi1ibG9nL2FwcC9hcnRpY2xlcy9wYWdlLnRzeFwiKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkiendang%2FGit%2Fdev-blog%2Fapp%2Farticles%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!\n"));

/***/ }),

/***/ "(app-pages-browser)/./app/articles/page.tsx":
/*!*******************************!*\
  !*** ./app/articles/page.tsx ***!
  \*******************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ BlogPage; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var _utils_fetch_data__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @utils/fetch-data */ \"(app-pages-browser)/./utils/fetch-data.ts\");\n/* harmony import */ var _storyblok_react_story__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @storyblok/react/story */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/story.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n // Update the path as per your project structure\n\nasync function BlogPage() {\n    try {\n        const { data, status } = await (0,_utils_fetch_data__WEBPACK_IMPORTED_MODULE_1__[\"default\"])(\"/articles/home\");\n        if (status !== 200 || !(data === null || data === void 0 ? void 0 : data.story)) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                children: \"Content not found.\"\n            }, void 0, false, {\n                fileName: \"/Users/kiendang/Git/dev-blog/app/articles/page.tsx\",\n                lineNumber: 11,\n                columnNumber: 14\n            }, this);\n        }\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(_storyblok_react_story__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n                story: data.story\n            }, void 0, false, {\n                fileName: \"/Users/kiendang/Git/dev-blog/app/articles/page.tsx\",\n                lineNumber: 16,\n                columnNumber: 9\n            }, this)\n        }, void 0, false, {\n            fileName: \"/Users/kiendang/Git/dev-blog/app/articles/page.tsx\",\n            lineNumber: 15,\n            columnNumber: 7\n        }, this);\n    } catch (error) {\n        console.error(\"Error loading the page:\", error);\n        return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n            children: \"Error loading content. Please try again later.\"\n        }, void 0, false, {\n            fileName: \"/Users/kiendang/Git/dev-blog/app/articles/page.tsx\",\n            lineNumber: 22,\n            columnNumber: 12\n        }, this);\n    }\n}\n_c = BlogPage;\nvar _c;\n$RefreshReg$(_c, \"BlogPage\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC9hcnRpY2xlcy9wYWdlLnRzeCIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUUwQyxDQUFDLGdEQUFnRDtBQUN2QztBQUVyQyxlQUFlRTtJQUM1QixJQUFJO1FBQ0YsTUFBTSxFQUFFQyxJQUFJLEVBQUVDLE1BQU0sRUFBRSxHQUFHLE1BQU1KLDZEQUFTQSxDQUFDO1FBRXpDLElBQUlJLFdBQVcsT0FBTyxFQUFDRCxpQkFBQUEsMkJBQUFBLEtBQU1FLEtBQUssR0FBRTtZQUNsQyxxQkFBTyw4REFBQ0M7MEJBQUk7Ozs7OztRQUNkO1FBRUEscUJBQ0UsOERBQUNBO3NCQUNDLDRFQUFDTCw4REFBY0E7Z0JBQUNJLE9BQU9GLEtBQUtFLEtBQUs7Ozs7Ozs7Ozs7O0lBR3ZDLEVBQUUsT0FBT0UsT0FBTztRQUNkQyxRQUFRRCxLQUFLLENBQUMsMkJBQTJCQTtRQUV6QyxxQkFBTyw4REFBQ0Q7c0JBQUk7Ozs7OztJQUNkO0FBQ0Y7S0FsQjhCSiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9hcHAvYXJ0aWNsZXMvcGFnZS50c3g/OWJiNCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IGZldGNoRGF0YSBmcm9tIFwiQHV0aWxzL2ZldGNoLWRhdGFcIjsgLy8gVXBkYXRlIHRoZSBwYXRoIGFzIHBlciB5b3VyIHByb2plY3Qgc3RydWN0dXJlXG5pbXBvcnQgU3RvcnlibG9rU3RvcnkgZnJvbSBcIkBzdG9yeWJsb2svcmVhY3Qvc3RvcnlcIjtcblxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gQmxvZ1BhZ2UoKSB7XG4gIHRyeSB7XG4gICAgY29uc3QgeyBkYXRhLCBzdGF0dXMgfSA9IGF3YWl0IGZldGNoRGF0YShcIi9hcnRpY2xlcy9ob21lXCIpO1xuXG4gICAgaWYgKHN0YXR1cyAhPT0gMjAwIHx8ICFkYXRhPy5zdG9yeSkge1xuICAgICAgcmV0dXJuIDxkaXY+Q29udGVudCBub3QgZm91bmQuPC9kaXY+O1xuICAgIH1cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8U3RvcnlibG9rU3Rvcnkgc3Rvcnk9e2RhdGEuc3Rvcnl9IC8+XG4gICAgICA8L2Rpdj5cbiAgICApO1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBsb2FkaW5nIHRoZSBwYWdlOlwiLCBlcnJvcik7XG5cbiAgICByZXR1cm4gPGRpdj5FcnJvciBsb2FkaW5nIGNvbnRlbnQuIFBsZWFzZSB0cnkgYWdhaW4gbGF0ZXIuPC9kaXY+O1xuICB9XG59XG4iXSwibmFtZXMiOlsiZmV0Y2hEYXRhIiwiU3RvcnlibG9rU3RvcnkiLCJCbG9nUGFnZSIsImRhdGEiLCJzdGF0dXMiLCJzdG9yeSIsImRpdiIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/articles/page.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./utils/fetch-data.ts":
/*!*****************************!*\
  !*** ./utils/fetch-data.ts ***!
  \*****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _storyblok_react_rsc__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @storyblok/react/rsc */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/rsc.mjs\");\n\nasync function fetchData(slug) {\n    console.log(\"\".concat(slug));\n    const storyblokApi = (0,_storyblok_react_rsc__WEBPACK_IMPORTED_MODULE_0__.getStoryblokApi)();\n    const sbParams = {\n        version: \"draft\",\n        resolve_links: \"url\",\n        cv: Date.now()\n    };\n    try {\n        const response = await storyblokApi.get(\"cdn/stories\".concat(slug ? \"/\".concat(slug) : \"\"), sbParams, {\n            cache: \"no-store\"\n        });\n        console.log(sbParams);\n        // Handle case where there is no story\n        return {\n            data: response.data,\n            status: 200\n        };\n    } catch (error) {\n        console.error(\"Error fetching data:\", error);\n        return {\n            data: {\n                story: null\n            },\n            status: 404\n        };\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (fetchData);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3V0aWxzL2ZldGNoLWRhdGEudHMiLCJtYXBwaW5ncyI6Ijs7QUFJOEI7QUFXOUIsZUFBZUMsVUFBVUMsSUFBYTtJQUNwQ0MsUUFBUUMsR0FBRyxDQUFDLEdBQVEsT0FBTEY7SUFDZixNQUFNRyxlQUFlTCxxRUFBZUE7SUFDcEMsTUFBTU0sV0FBNkI7UUFDakNDLFNBQVM7UUFDVEMsZUFBZTtRQUNmQyxJQUFJQyxLQUFLQyxHQUFHO0lBQ2Q7SUFDQSxJQUFJO1FBQ0YsTUFBTUMsV0FBc0IsTUFBTVAsYUFBYVEsR0FBRyxDQUNoRCxjQUFxQyxPQUF2QlgsT0FBTyxJQUFTLE9BQUxBLFFBQVMsS0FDbENJLFVBQ0E7WUFDRVEsT0FBTztRQUNUO1FBRUZYLFFBQVFDLEdBQUcsQ0FBQ0U7UUFFWixzQ0FBc0M7UUFDdEMsT0FBTztZQUNMUyxNQUFNSCxTQUFTRyxJQUFJO1lBQ25CQyxRQUFRO1FBQ1Y7SUFDRixFQUFFLE9BQU9DLE9BQU87UUFDZGQsUUFBUWMsS0FBSyxDQUFDLHdCQUF3QkE7UUFDdEMsT0FBTztZQUNMRixNQUFNO2dCQUNKRyxPQUFPO1lBQ1Q7WUFDQUYsUUFBUTtRQUNWO0lBQ0Y7QUFDRjtBQUVBLCtEQUFlZixTQUFTQSxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3V0aWxzL2ZldGNoLWRhdGEudHM/YTdjZCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBnZXRTdG9yeWJsb2tBcGksXG4gIElTYlN0b3JpZXNQYXJhbXMsXG4gIElTYlJlc3VsdCxcbn0gZnJvbSBcIkBzdG9yeWJsb2svcmVhY3QvcnNjXCI7XG5cbmludGVyZmFjZSBGZXRjaERhdGFSZXNwb25zZSB7XG4gIHN0b3J5OiBhbnk7IC8vIFJlcGxhY2UgJ2FueScgd2l0aCB0aGUgYWN0dWFsIHR5cGUgb2YgeW91ciBzdG9yeVxufVxuXG5pbnRlcmZhY2UgRmV0Y2hEYXRhUmVzdWx0IHtcbiAgZGF0YTogRmV0Y2hEYXRhUmVzcG9uc2U7XG4gIHN0YXR1czogbnVtYmVyO1xufVxuXG5hc3luYyBmdW5jdGlvbiBmZXRjaERhdGEoc2x1Zz86IHN0cmluZyk6IFByb21pc2U8RmV0Y2hEYXRhUmVzdWx0PiB7XG4gIGNvbnNvbGUubG9nKGAke3NsdWd9YCk7XG4gIGNvbnN0IHN0b3J5Ymxva0FwaSA9IGdldFN0b3J5Ymxva0FwaSgpO1xuICBjb25zdCBzYlBhcmFtczogSVNiU3Rvcmllc1BhcmFtcyA9IHtcbiAgICB2ZXJzaW9uOiBcImRyYWZ0XCIsXG4gICAgcmVzb2x2ZV9saW5rczogXCJ1cmxcIixcbiAgICBjdjogRGF0ZS5ub3coKSwgLy8gVXNlIHRoZSBjdXJyZW50IHRpbWVzdGFtcCBhcyBhIGNhY2hlIGJ1c3RlclxuICB9O1xuICB0cnkge1xuICAgIGNvbnN0IHJlc3BvbnNlOiBJU2JSZXN1bHQgPSBhd2FpdCBzdG9yeWJsb2tBcGkuZ2V0KFxuICAgICAgYGNkbi9zdG9yaWVzJHtzbHVnID8gYC8ke3NsdWd9YCA6IFwiXCJ9YCxcbiAgICAgIHNiUGFyYW1zLFxuICAgICAge1xuICAgICAgICBjYWNoZTogXCJuby1zdG9yZVwiLFxuICAgICAgfVxuICAgICk7XG4gICAgY29uc29sZS5sb2coc2JQYXJhbXMpO1xuXG4gICAgLy8gSGFuZGxlIGNhc2Ugd2hlcmUgdGhlcmUgaXMgbm8gc3RvcnlcbiAgICByZXR1cm4ge1xuICAgICAgZGF0YTogcmVzcG9uc2UuZGF0YSxcbiAgICAgIHN0YXR1czogMjAwLCAvLyBEZWZhdWx0IHN0YXR1cyBpbmRpY2F0aW5nIHRoYXQgdGhlIHN0b3J5IHdhcyBub3QgZm91bmRcbiAgICB9O1xuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoXCJFcnJvciBmZXRjaGluZyBkYXRhOlwiLCBlcnJvcik7XG4gICAgcmV0dXJuIHtcbiAgICAgIGRhdGE6IHtcbiAgICAgICAgc3Rvcnk6IG51bGwsXG4gICAgICB9LCAvLyBPcHRpb25hbGx5IHByb3ZpZGUgZGVmYXVsdCBkYXRhIGluIGNhc2Ugb2YgYW4gZXJyb3JcbiAgICAgIHN0YXR1czogNDA0LCAvLyBJbmRpY2F0ZSBhbiBpbnRlcm5hbCBzZXJ2ZXIgZXJyb3JcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZldGNoRGF0YTtcbiJdLCJuYW1lcyI6WyJnZXRTdG9yeWJsb2tBcGkiLCJmZXRjaERhdGEiLCJzbHVnIiwiY29uc29sZSIsImxvZyIsInN0b3J5Ymxva0FwaSIsInNiUGFyYW1zIiwidmVyc2lvbiIsInJlc29sdmVfbGlua3MiLCJjdiIsIkRhdGUiLCJub3ciLCJyZXNwb25zZSIsImdldCIsImNhY2hlIiwiZGF0YSIsInN0YXR1cyIsImVycm9yIiwic3RvcnkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./utils/fetch-data.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js ***!
  \****************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("/**\n * @license React\n * react-jsx-dev-runtime.development.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\n\nif (true) {\n  (function() {\n'use strict';\n\nvar React = __webpack_require__(/*! next/dist/compiled/react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n// The Symbol used to tag the ReactElement-like types.\nvar REACT_ELEMENT_TYPE = Symbol.for('react.element');\nvar REACT_PORTAL_TYPE = Symbol.for('react.portal');\nvar REACT_FRAGMENT_TYPE = Symbol.for('react.fragment');\nvar REACT_STRICT_MODE_TYPE = Symbol.for('react.strict_mode');\nvar REACT_PROFILER_TYPE = Symbol.for('react.profiler');\nvar REACT_PROVIDER_TYPE = Symbol.for('react.provider'); // TODO: Delete with enableRenderableContext\n\nvar REACT_CONSUMER_TYPE = Symbol.for('react.consumer');\nvar REACT_CONTEXT_TYPE = Symbol.for('react.context');\nvar REACT_FORWARD_REF_TYPE = Symbol.for('react.forward_ref');\nvar REACT_SUSPENSE_TYPE = Symbol.for('react.suspense');\nvar REACT_SUSPENSE_LIST_TYPE = Symbol.for('react.suspense_list');\nvar REACT_MEMO_TYPE = Symbol.for('react.memo');\nvar REACT_LAZY_TYPE = Symbol.for('react.lazy');\nvar REACT_OFFSCREEN_TYPE = Symbol.for('react.offscreen');\nvar REACT_CACHE_TYPE = Symbol.for('react.cache');\nvar MAYBE_ITERATOR_SYMBOL = Symbol.iterator;\nvar FAUX_ITERATOR_SYMBOL = '@@iterator';\nfunction getIteratorFn(maybeIterable) {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n\n  var maybeIterator = MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL];\n\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n\n  return null;\n}\n\nvar ReactSharedInternals = React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nfunction error(format) {\n  {\n    {\n      for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n        args[_key2 - 1] = arguments[_key2];\n      }\n\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  {\n    var ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    var stack = ReactDebugCurrentFrame.getStackAddendum();\n\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    } // eslint-disable-next-line react-internal/safe-string-coercion\n\n\n    var argsWithFormat = args.map(function (item) {\n      return String(item);\n    }); // Careful: RN currently depends on this prefix\n\n    argsWithFormat.unshift('Warning: ' + format); // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n\n// -----------------------------------------------------------------------------\n\nvar enableScopeAPI = false; // Experimental Create Event Handle API.\nvar enableCacheElement = false;\nvar enableTransitionTracing = false; // No known bugs, but needs performance testing\n\nvar enableLegacyHidden = false; // Enables unstable_avoidThisFallback feature in Fiber\nvar enableRenderableContext = false;\n// stuff. Intended to enable React core members to more easily debug scheduling\n// issues in DEV builds.\n\nvar enableDebugTracing = false;\n\nfunction getWrappedName(outerType, innerType, wrapperName) {\n  var displayName = outerType.displayName;\n\n  if (displayName) {\n    return displayName;\n  }\n\n  var functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? wrapperName + \"(\" + functionName + \")\" : wrapperName;\n} // Keep in sync with react-reconciler/getComponentNameFromFiber\n\n\nfunction getContextName(type) {\n  return type.displayName || 'Context';\n}\n\nvar REACT_CLIENT_REFERENCE$2 = Symbol.for('react.client.reference'); // Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\n\nfunction getComponentNameFromType(type) {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n\n  if (typeof type === 'function') {\n    if (type.$$typeof === REACT_CLIENT_REFERENCE$2) {\n      // TODO: Create a convention for naming client references with debug info.\n      return null;\n    }\n\n    return type.displayName || type.name || null;\n  }\n\n  if (typeof type === 'string') {\n    return type;\n  }\n\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n\n    case REACT_CACHE_TYPE:\n      {\n        return 'Cache';\n      }\n\n  }\n\n  if (typeof type === 'object') {\n    {\n      if (typeof type.tag === 'number') {\n        error('Received an unexpected object in getComponentNameFromType(). ' + 'This is likely a bug in React. Please file an issue.');\n      }\n    }\n\n    switch (type.$$typeof) {\n      case REACT_PROVIDER_TYPE:\n        {\n          var provider = type;\n          return getContextName(provider._context) + '.Provider';\n        }\n\n      case REACT_CONTEXT_TYPE:\n        var context = type;\n\n        {\n          return getContextName(context) + '.Consumer';\n        }\n\n      case REACT_CONSUMER_TYPE:\n        {\n          return null;\n        }\n\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n\n      case REACT_MEMO_TYPE:\n        var outerName = type.displayName || null;\n\n        if (outerName !== null) {\n          return outerName;\n        }\n\n        return getComponentNameFromType(type.type) || 'Memo';\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            return getComponentNameFromType(init(payload));\n          } catch (x) {\n            return null;\n          }\n        }\n    }\n  }\n\n  return null;\n}\n\n// $FlowFixMe[method-unbinding]\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nvar assign = Object.assign;\n\n/*\n * The `'' + value` pattern (used in perf-sensitive code) throws for Symbol\n * and Temporal.* types. See https://github.com/facebook/react/pull/22064.\n *\n * The functions in this module will throw an easier-to-understand,\n * easier-to-debug exception with a clear errors message message explaining the\n * problem. (Instead of a confusing exception thrown inside the implementation\n * of the `value` object).\n */\n// $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\nfunction typeName(value) {\n  {\n    // toStringTag is needed for namespaced types like Temporal.Instant\n    var hasToStringTag = typeof Symbol === 'function' && Symbol.toStringTag;\n    var type = hasToStringTag && value[Symbol.toStringTag] || value.constructor.name || 'Object'; // $FlowFixMe[incompatible-return]\n\n    return type;\n  }\n} // $FlowFixMe[incompatible-return] only called in DEV, so void return is not possible.\n\n\nfunction willCoercionThrow(value) {\n  {\n    try {\n      testStringCoercion(value);\n      return false;\n    } catch (e) {\n      return true;\n    }\n  }\n}\n\nfunction testStringCoercion(value) {\n  // If you ended up here by following an exception call stack, here's what's\n  // happened: you supplied an object or symbol value to React (as a prop, key,\n  // DOM attribute, CSS property, string ref, etc.) and when React tried to\n  // coerce it to a string using `'' + value`, an exception was thrown.\n  //\n  // The most common types that will cause this exception are `Symbol` instances\n  // and Temporal objects like `Temporal.Instant`. But any object that has a\n  // `valueOf` or `[Symbol.toPrimitive]` method that throws will also cause this\n  // exception. (Library authors do this to prevent users from using built-in\n  // numeric operators like `+` or comparison operators like `>=` because custom\n  // methods are needed to perform accurate arithmetic or comparison.)\n  //\n  // To fix the problem, coerce this object or symbol value to a string before\n  // passing it to React. The most reliable way is usually `String(value)`.\n  //\n  // To find which value is throwing, check the browser or debugger console.\n  // Before this exception was thrown, there should be `console.error` output\n  // that shows the type (Symbol, Temporal.PlainDate, etc.) that caused the\n  // problem and how that type was used: key, atrribute, input value prop, etc.\n  // In most cases, this console output also shows the component and its\n  // ancestor components where the exception happened.\n  //\n  // eslint-disable-next-line react-internal/safe-string-coercion\n  return '' + value;\n}\nfunction checkKeyStringCoercion(value) {\n  {\n    if (willCoercionThrow(value)) {\n      error('The provided key is an unsupported type %s.' + ' This value must be coerced to a string before using it here.', typeName(value));\n\n      return testStringCoercion(value); // throw (to help callers find troubleshooting comments)\n    }\n  }\n}\n\nvar REACT_CLIENT_REFERENCE$1 = Symbol.for('react.client.reference');\nfunction isValidElementType(type) {\n  if (typeof type === 'string' || typeof type === 'function') {\n    return true;\n  } // Note: typeof might be other than 'symbol' or 'number' (e.g. if it's a polyfill).\n\n\n  if (type === REACT_FRAGMENT_TYPE || type === REACT_PROFILER_TYPE || enableDebugTracing  || type === REACT_STRICT_MODE_TYPE || type === REACT_SUSPENSE_TYPE || type === REACT_SUSPENSE_LIST_TYPE || enableLegacyHidden  || type === REACT_OFFSCREEN_TYPE || enableScopeAPI  || enableCacheElement  || enableTransitionTracing ) {\n    return true;\n  }\n\n  if (typeof type === 'object' && type !== null) {\n    if (type.$$typeof === REACT_LAZY_TYPE || type.$$typeof === REACT_MEMO_TYPE || type.$$typeof === REACT_CONTEXT_TYPE || type.$$typeof === REACT_PROVIDER_TYPE || enableRenderableContext  || type.$$typeof === REACT_FORWARD_REF_TYPE || // This needs to include all possible module reference object\n    // types supported by any Flight configuration anywhere since\n    // we don't know which Flight build this will end up being used\n    // with.\n    type.$$typeof === REACT_CLIENT_REFERENCE$1 || type.getModuleId !== undefined) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar isArrayImpl = Array.isArray; // eslint-disable-next-line no-redeclare\n\nfunction isArray(a) {\n  return isArrayImpl(a);\n}\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\nvar disabledDepth = 0;\nvar prevLog;\nvar prevInfo;\nvar prevWarn;\nvar prevError;\nvar prevGroup;\nvar prevGroupCollapsed;\nvar prevGroupEnd;\n\nfunction disabledLog() {}\n\ndisabledLog.__reactDisabledLog = true;\nfunction disableLogs() {\n  {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd; // https://github.com/facebook/react/issues/19099\n\n      var props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    disabledDepth++;\n  }\n}\nfunction reenableLogs() {\n  {\n    disabledDepth--;\n\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      var props = {\n        configurable: true,\n        enumerable: true,\n        writable: true\n      }; // $FlowFixMe[cannot-write] Flow thinks console is immutable.\n\n      Object.defineProperties(console, {\n        log: assign({}, props, {\n          value: prevLog\n        }),\n        info: assign({}, props, {\n          value: prevInfo\n        }),\n        warn: assign({}, props, {\n          value: prevWarn\n        }),\n        error: assign({}, props, {\n          value: prevError\n        }),\n        group: assign({}, props, {\n          value: prevGroup\n        }),\n        groupCollapsed: assign({}, props, {\n          value: prevGroupCollapsed\n        }),\n        groupEnd: assign({}, props, {\n          value: prevGroupEnd\n        })\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n\n    if (disabledDepth < 0) {\n      error('disabledDepth fell below zero. ' + 'This is a bug in React. Please file an issue.');\n    }\n  }\n}\n\nvar ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\nvar prefix;\nfunction describeBuiltInComponentFrame(name, ownerFn) {\n  {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        var match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = match && match[1] || '';\n      }\n    } // We use the prefix to ensure our stacks line up with native stack frames.\n\n\n    return '\\n' + prefix + name;\n  }\n}\nvar reentry = false;\nvar componentFrameCache;\n\n{\n  var PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n/**\n * Leverages native browser/VM stack frames to get proper details (e.g.\n * filename, line + col number) for a single component in a component stack. We\n * do this by:\n *   (1) throwing and catching an error in the function - this will be our\n *       control error.\n *   (2) calling the component which will eventually throw an error that we'll\n *       catch - this will be our sample error.\n *   (3) diffing the control and sample error stacks to find the stack frame\n *       which represents our component.\n */\n\n\nfunction describeNativeComponentFrame(fn, construct) {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (!fn || reentry) {\n    return '';\n  }\n\n  {\n    var frame = componentFrameCache.get(fn);\n\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  reentry = true;\n  var previousPrepareStackTrace = Error.prepareStackTrace; // $FlowFixMe[incompatible-type] It does accept undefined.\n\n  Error.prepareStackTrace = undefined;\n  var previousDispatcher;\n\n  {\n    previousDispatcher = ReactCurrentDispatcher.current; // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  /**\n   * Finding a common stack frame between sample and control errors can be\n   * tricky given the different types and levels of stack trace truncation from\n   * different JS VMs. So instead we'll attempt to control what that common\n   * frame should be through this object method:\n   * Having both the sample and control errors be in the function under the\n   * `DescribeNativeComponentFrameRoot` property, + setting the `name` and\n   * `displayName` properties of the function ensures that a stack\n   * frame exists that has the method name `DescribeNativeComponentFrameRoot` in\n   * it for both control and sample stacks.\n   */\n\n\n  var RunInRootFrame = {\n    DetermineComponentFrameRoot: function () {\n      var control;\n\n      try {\n        // This should throw.\n        if (construct) {\n          // Something should be setting the props in the constructor.\n          var Fake = function () {\n            throw Error();\n          }; // $FlowFixMe[prop-missing]\n\n\n          Object.defineProperty(Fake.prototype, 'props', {\n            set: function () {\n              // We use a throwing setter instead of frozen or non-writable props\n              // because that won't throw in a non-strict mode function.\n              throw Error();\n            }\n          });\n\n          if (typeof Reflect === 'object' && Reflect.construct) {\n            // We construct a different control for this case to include any extra\n            // frames added by the construct call.\n            try {\n              Reflect.construct(Fake, []);\n            } catch (x) {\n              control = x;\n            }\n\n            Reflect.construct(fn, [], Fake);\n          } else {\n            try {\n              Fake.call();\n            } catch (x) {\n              control = x;\n            } // $FlowFixMe[prop-missing] found when upgrading Flow\n\n\n            fn.call(Fake.prototype);\n          }\n        } else {\n          try {\n            throw Error();\n          } catch (x) {\n            control = x;\n          } // TODO(luna): This will currently only throw if the function component\n          // tries to access React/ReactDOM/props. We should probably make this throw\n          // in simple components too\n\n\n          var maybePromise = fn(); // If the function component returns a promise, it's likely an async\n          // component, which we don't yet support. Attach a noop catch handler to\n          // silence the error.\n          // TODO: Implement component stacks for async client components?\n\n          if (maybePromise && typeof maybePromise.catch === 'function') {\n            maybePromise.catch(function () {});\n          }\n        }\n      } catch (sample) {\n        // This is inlined manually because closure doesn't do it for us.\n        if (sample && control && typeof sample.stack === 'string') {\n          return [sample.stack, control.stack];\n        }\n      }\n\n      return [null, null];\n    }\n  }; // $FlowFixMe[prop-missing]\n\n  RunInRootFrame.DetermineComponentFrameRoot.displayName = 'DetermineComponentFrameRoot';\n  var namePropDescriptor = Object.getOwnPropertyDescriptor(RunInRootFrame.DetermineComponentFrameRoot, 'name'); // Before ES6, the `name` property was not configurable.\n\n  if (namePropDescriptor && namePropDescriptor.configurable) {\n    // V8 utilizes a function's `name` property when generating a stack trace.\n    Object.defineProperty(RunInRootFrame.DetermineComponentFrameRoot, // Configurable properties can be updated even if its writable descriptor\n    // is set to `false`.\n    // $FlowFixMe[cannot-write]\n    'name', {\n      value: 'DetermineComponentFrameRoot'\n    });\n  }\n\n  try {\n    var _RunInRootFrame$Deter = RunInRootFrame.DetermineComponentFrameRoot(),\n        sampleStack = _RunInRootFrame$Deter[0],\n        controlStack = _RunInRootFrame$Deter[1];\n\n    if (sampleStack && controlStack) {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      var sampleLines = sampleStack.split('\\n');\n      var controlLines = controlStack.split('\\n');\n      var s = 0;\n      var c = 0;\n\n      while (s < sampleLines.length && !sampleLines[s].includes('DetermineComponentFrameRoot')) {\n        s++;\n      }\n\n      while (c < controlLines.length && !controlLines[c].includes('DetermineComponentFrameRoot')) {\n        c++;\n      } // We couldn't find our intentionally injected common root frame, attempt\n      // to find another common root frame by search from the bottom of the\n      // control stack...\n\n\n      if (s === sampleLines.length || c === controlLines.length) {\n        s = sampleLines.length - 1;\n        c = controlLines.length - 1;\n\n        while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n          // We expect at least one stack frame to be shared.\n          // Typically this will be the root most one. However, stack frames may be\n          // cut off due to maximum stack limits. In this case, one maybe cut off\n          // earlier than the other. We assume that the sample is longer or the same\n          // and there for cut off earlier. So we should find the root most frame in\n          // the sample somewhere in the control.\n          c--;\n        }\n      }\n\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--; // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                var _frame = '\\n' + sampleLines[s].replace(' at new ', ' at '); // If our component frame is labeled \"<anonymous>\"\n                // but we have a user-provided \"displayName\"\n                // splice it in to make the stack more readable.\n\n\n                if (fn.displayName && _frame.includes('<anonymous>')) {\n                  _frame = _frame.replace('<anonymous>', fn.displayName);\n                }\n\n                if (true) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, _frame);\n                  }\n                } // Return the line we found.\n\n\n                return _frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n\n    {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  } // Fallback to just using the name if we couldn't make it throw.\n\n\n  var name = fn ? fn.displayName || fn.name : '';\n  var syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n\n  {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n\n  return syntheticFrame;\n}\nfunction describeFunctionComponentFrame(fn, ownerFn) {\n  {\n    return describeNativeComponentFrame(fn, false);\n  }\n}\n\nfunction shouldConstruct(Component) {\n  var prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nfunction describeUnknownElementTypeFrameInDEV(type, ownerFn) {\n\n  if (type == null) {\n    return '';\n  }\n\n  if (typeof type === 'function') {\n    {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    }\n  }\n\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type);\n  }\n\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense');\n\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList');\n  }\n\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render);\n\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, ownerFn);\n\n      case REACT_LAZY_TYPE:\n        {\n          var lazyComponent = type;\n          var payload = lazyComponent._payload;\n          var init = lazyComponent._init;\n\n          try {\n            // Lazy may contain any component type so we recursively resolve it.\n            return describeUnknownElementTypeFrameInDEV(init(payload), ownerFn);\n          } catch (x) {}\n        }\n    }\n  }\n\n  return '';\n}\n\nvar ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\nvar ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\nvar REACT_CLIENT_REFERENCE = Symbol.for('react.client.reference');\nvar specialPropKeyWarningShown;\nvar specialPropRefWarningShown;\nvar didWarnAboutStringRefs;\n\n{\n  didWarnAboutStringRefs = {};\n}\n\nfunction hasValidRef(config) {\n  {\n    if (hasOwnProperty.call(config, 'ref')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'ref').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.ref !== undefined;\n}\n\nfunction hasValidKey(config) {\n  {\n    if (hasOwnProperty.call(config, 'key')) {\n      var getter = Object.getOwnPropertyDescriptor(config, 'key').get;\n\n      if (getter && getter.isReactWarning) {\n        return false;\n      }\n    }\n  }\n\n  return config.key !== undefined;\n}\n\nfunction warnIfStringRefCannotBeAutoConverted(config, self) {\n  {\n    if (typeof config.ref === 'string' && ReactCurrentOwner.current && self && ReactCurrentOwner.current.stateNode !== self) {\n      var componentName = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (!didWarnAboutStringRefs[componentName]) {\n        error('Component \"%s\" contains the string ref \"%s\". ' + 'Support for string refs will be removed in a future major release. ' + 'This case cannot be automatically converted to an arrow function. ' + 'We ask you to manually fix this case by using useRef() or createRef() instead. ' + 'Learn more about using refs safely here: ' + 'https://reactjs.org/link/strict-mode-string-ref', getComponentNameFromType(ReactCurrentOwner.current.type), config.ref);\n\n        didWarnAboutStringRefs[componentName] = true;\n      }\n    }\n  }\n}\n\nfunction defineKeyPropWarningGetter(props, displayName) {\n  {\n    var warnAboutAccessingKey = function () {\n      if (!specialPropKeyWarningShown) {\n        specialPropKeyWarningShown = true;\n\n        error('%s: `key` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n      }\n    };\n\n    warnAboutAccessingKey.isReactWarning = true;\n    Object.defineProperty(props, 'key', {\n      get: warnAboutAccessingKey,\n      configurable: true\n    });\n  }\n}\n\nfunction defineRefPropWarningGetter(props, displayName) {\n  {\n    {\n      var warnAboutAccessingRef = function () {\n        if (!specialPropRefWarningShown) {\n          specialPropRefWarningShown = true;\n\n          error('%s: `ref` is not a prop. Trying to access it will result ' + 'in `undefined` being returned. If you need to access the same ' + 'value within the child component, you should pass it as a different ' + 'prop. (https://reactjs.org/link/special-props)', displayName);\n        }\n      };\n\n      warnAboutAccessingRef.isReactWarning = true;\n      Object.defineProperty(props, 'ref', {\n        get: warnAboutAccessingRef,\n        configurable: true\n      });\n    }\n  }\n}\n/**\n * Factory method to create a new React element. This no longer adheres to\n * the class pattern, so do not use new to call it. Also, instanceof check\n * will not work. Instead test $$typeof field against Symbol.for('react.element') to check\n * if something is a React Element.\n *\n * @param {*} type\n * @param {*} props\n * @param {*} key\n * @param {string|object} ref\n * @param {*} owner\n * @param {*} self A *temporary* helper to detect places where `this` is\n * different from the `owner` when React.createElement is called, so that we\n * can warn. We want to get rid of owner and replace string `ref`s with arrow\n * functions, and as long as `this` and owner are the same, there will be no\n * change in behavior.\n * @param {*} source An annotation object (added by a transpiler or otherwise)\n * indicating filename, line number, and/or other information.\n * @internal\n */\n\n\nfunction ReactElement(type, key, _ref, self, source, owner, props) {\n  var ref;\n\n  {\n    ref = _ref;\n  }\n\n  var element;\n\n  {\n    // In prod, `ref` is a regular property. It will be removed in a\n    // future release.\n    element = {\n      // This tag allows us to uniquely identify this as a React Element\n      $$typeof: REACT_ELEMENT_TYPE,\n      // Built-in properties that belong on the element\n      type: type,\n      key: key,\n      ref: ref,\n      props: props,\n      // Record the component responsible for creating this element.\n      _owner: owner\n    };\n  }\n\n  {\n    // The validation flag is currently mutative. We put it on\n    // an external backing store so that we can freeze the whole object.\n    // This can be replaced with a WeakMap once they are implemented in\n    // commonly used development environments.\n    element._store = {}; // To make comparing ReactElements easier for testing purposes, we make\n    // the validation flag non-enumerable (where possible, which should\n    // include every environment we run tests in), so the test framework\n    // ignores it.\n\n    Object.defineProperty(element._store, 'validated', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: false\n    }); // debugInfo contains Server Component debug information.\n\n    Object.defineProperty(element, '_debugInfo', {\n      configurable: false,\n      enumerable: false,\n      writable: true,\n      value: null\n    });\n\n    if (Object.freeze) {\n      Object.freeze(element.props);\n      Object.freeze(element);\n    }\n  }\n\n  return element;\n}\nvar didWarnAboutKeySpread = {};\n/**\n * https://github.com/reactjs/rfcs/pull/107\n * @param {*} type\n * @param {object} props\n * @param {string} key\n */\n\nfunction jsxDEV$1(type, config, maybeKey, isStaticChildren, source, self) {\n  {\n    if (!isValidElementType(type)) {\n      // This is an invalid element type.\n      //\n      // We warn in this case but don't throw. We expect the element creation to\n      // succeed and there will likely be errors in render.\n      var info = '';\n\n      if (type === undefined || typeof type === 'object' && type !== null && Object.keys(type).length === 0) {\n        info += ' You likely forgot to export your component from the file ' + \"it's defined in, or you might have mixed up default and named imports.\";\n      }\n\n      var typeString;\n\n      if (type === null) {\n        typeString = 'null';\n      } else if (isArray(type)) {\n        typeString = 'array';\n      } else if (type !== undefined && type.$$typeof === REACT_ELEMENT_TYPE) {\n        typeString = \"<\" + (getComponentNameFromType(type.type) || 'Unknown') + \" />\";\n        info = ' Did you accidentally export a JSX literal instead of a component?';\n      } else {\n        typeString = typeof type;\n      }\n\n      error('React.jsx: type is invalid -- expected a string (for ' + 'built-in components) or a class/function (for composite ' + 'components) but got: %s.%s', typeString, info);\n    } else {\n      // This is a valid element type.\n      // Skip key warning if the type isn't valid since our key validation logic\n      // doesn't expect a non-string/function type and can throw confusing\n      // errors. We don't want exception behavior to differ between dev and\n      // prod. (Rendering will throw with a helpful message and as soon as the\n      // type is fixed, the key warnings will appear.)\n      var children = config.children;\n\n      if (children !== undefined) {\n        if (isStaticChildren) {\n          if (isArray(children)) {\n            for (var i = 0; i < children.length; i++) {\n              validateChildKeys(children[i], type);\n            }\n\n            if (Object.freeze) {\n              Object.freeze(children);\n            }\n          } else {\n            error('React.jsx: Static children should always be an array. ' + 'You are likely explicitly calling React.jsxs or React.jsxDEV. ' + 'Use the Babel transform instead.');\n          }\n        } else {\n          validateChildKeys(children, type);\n        }\n      }\n    } // Warn about key spread regardless of whether the type is valid.\n\n\n    if (hasOwnProperty.call(config, 'key')) {\n      var componentName = getComponentNameFromType(type);\n      var keys = Object.keys(config).filter(function (k) {\n        return k !== 'key';\n      });\n      var beforeExample = keys.length > 0 ? '{key: someKey, ' + keys.join(': ..., ') + ': ...}' : '{key: someKey}';\n\n      if (!didWarnAboutKeySpread[componentName + beforeExample]) {\n        var afterExample = keys.length > 0 ? '{' + keys.join(': ..., ') + ': ...}' : '{}';\n\n        error('A props object containing a \"key\" prop is being spread into JSX:\\n' + '  let props = %s;\\n' + '  <%s {...props} />\\n' + 'React keys must be passed directly to JSX without using spread:\\n' + '  let props = %s;\\n' + '  <%s key={someKey} {...props} />', beforeExample, componentName, afterExample, componentName);\n\n        didWarnAboutKeySpread[componentName + beforeExample] = true;\n      }\n    }\n\n    var propName; // Reserved names are extracted\n\n    var props = {};\n    var key = null;\n    var ref = null; // Currently, key can be spread in as a prop. This causes a potential\n    // issue if key is also explicitly declared (ie. <div {...props} key=\"Hi\" />\n    // or <div key=\"Hi\" {...props} /> ). We want to deprecate key spread,\n    // but as an intermediary step, we will use jsxDEV for everything except\n    // <div {...props} key=\"Hi\" />, because we aren't currently able to tell if\n    // key is explicitly declared to be undefined or not.\n\n    if (maybeKey !== undefined) {\n      {\n        checkKeyStringCoercion(maybeKey);\n      }\n\n      key = '' + maybeKey;\n    }\n\n    if (hasValidKey(config)) {\n      {\n        checkKeyStringCoercion(config.key);\n      }\n\n      key = '' + config.key;\n    }\n\n    if (hasValidRef(config)) {\n      {\n        ref = config.ref;\n      }\n\n      warnIfStringRefCannotBeAutoConverted(config, self);\n    } // Remaining properties are added to a new props object\n\n\n    for (propName in config) {\n      if (hasOwnProperty.call(config, propName) && // Skip over reserved prop names\n      propName !== 'key' && (propName !== 'ref')) {\n        props[propName] = config[propName];\n      }\n    } // Resolve default props\n\n\n    if (type && type.defaultProps) {\n      var defaultProps = type.defaultProps;\n\n      for (propName in defaultProps) {\n        if (props[propName] === undefined) {\n          props[propName] = defaultProps[propName];\n        }\n      }\n    }\n\n    if (key || ref) {\n      var displayName = typeof type === 'function' ? type.displayName || type.name || 'Unknown' : type;\n\n      if (key) {\n        defineKeyPropWarningGetter(props, displayName);\n      }\n\n      if (ref) {\n        defineRefPropWarningGetter(props, displayName);\n      }\n    }\n\n    var element = ReactElement(type, key, ref, self, source, ReactCurrentOwner.current, props);\n\n    if (type === REACT_FRAGMENT_TYPE) {\n      validateFragmentProps(element);\n    }\n\n    return element;\n  }\n}\n\nfunction getDeclarationErrorAddendum() {\n  {\n    if (ReactCurrentOwner.current) {\n      var name = getComponentNameFromType(ReactCurrentOwner.current.type);\n\n      if (name) {\n        return '\\n\\nCheck the render method of `' + name + '`.';\n      }\n    }\n\n    return '';\n  }\n}\n/**\n * Ensure that every element either is passed in a static location, in an\n * array with an explicit keys property defined, or in an object literal\n * with valid key property.\n *\n * @internal\n * @param {ReactNode} node Statically passed child of any type.\n * @param {*} parentType node's parent's type.\n */\n\n\nfunction validateChildKeys(node, parentType) {\n  {\n    if (typeof node !== 'object' || !node) {\n      return;\n    }\n\n    if (node.$$typeof === REACT_CLIENT_REFERENCE) ; else if (isArray(node)) {\n      for (var i = 0; i < node.length; i++) {\n        var child = node[i];\n\n        if (isValidElement(child)) {\n          validateExplicitKey(child, parentType);\n        }\n      }\n    } else if (isValidElement(node)) {\n      // This element was passed in a valid location.\n      if (node._store) {\n        node._store.validated = true;\n      }\n    } else {\n      var iteratorFn = getIteratorFn(node);\n\n      if (typeof iteratorFn === 'function') {\n        // Entry iterators used to provide implicit keys,\n        // but now we print a separate warning for them later.\n        if (iteratorFn !== node.entries) {\n          var iterator = iteratorFn.call(node);\n          var step;\n\n          while (!(step = iterator.next()).done) {\n            if (isValidElement(step.value)) {\n              validateExplicitKey(step.value, parentType);\n            }\n          }\n        }\n      }\n    }\n  }\n}\n/**\n * Verifies the object is a ReactElement.\n * See https://reactjs.org/docs/react-api.html#isvalidelement\n * @param {?object} object\n * @return {boolean} True if `object` is a ReactElement.\n * @final\n */\n\n\nfunction isValidElement(object) {\n  return typeof object === 'object' && object !== null && object.$$typeof === REACT_ELEMENT_TYPE;\n}\nvar ownerHasKeyUseWarning = {};\n/**\n * Warn if the element doesn't have an explicit key assigned to it.\n * This element is in an array. The array could grow and shrink or be\n * reordered. All children that haven't already been validated are required to\n * have a \"key\" property assigned to it. Error statuses are cached so a warning\n * will only be shown once.\n *\n * @internal\n * @param {ReactElement} element Element that requires a key.\n * @param {*} parentType element's parent's type.\n */\n\nfunction validateExplicitKey(element, parentType) {\n  {\n    if (!element._store || element._store.validated || element.key != null) {\n      return;\n    }\n\n    element._store.validated = true;\n    var currentComponentErrorInfo = getCurrentComponentErrorInfo(parentType);\n\n    if (ownerHasKeyUseWarning[currentComponentErrorInfo]) {\n      return;\n    }\n\n    ownerHasKeyUseWarning[currentComponentErrorInfo] = true; // Usually the current owner is the offender, but if it accepts children as a\n    // property, it may be the creator of the child that's responsible for\n    // assigning it a key.\n\n    var childOwner = '';\n\n    if (element && element._owner && element._owner !== ReactCurrentOwner.current) {\n      // Give the component that originally created this child.\n      childOwner = \" It was passed a child from \" + getComponentNameFromType(element._owner.type) + \".\";\n    }\n\n    setCurrentlyValidatingElement(element);\n\n    error('Each child in a list should have a unique \"key\" prop.' + '%s%s See https://reactjs.org/link/warning-keys for more information.', currentComponentErrorInfo, childOwner);\n\n    setCurrentlyValidatingElement(null);\n  }\n}\n\nfunction setCurrentlyValidatingElement(element) {\n  {\n    if (element) {\n      var owner = element._owner;\n      var stack = describeUnknownElementTypeFrameInDEV(element.type, owner ? owner.type : null);\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nfunction getCurrentComponentErrorInfo(parentType) {\n  {\n    var info = getDeclarationErrorAddendum();\n\n    if (!info) {\n      var parentName = getComponentNameFromType(parentType);\n\n      if (parentName) {\n        info = \"\\n\\nCheck the top-level render call using <\" + parentName + \">.\";\n      }\n    }\n\n    return info;\n  }\n}\n/**\n * Given a fragment, validate that it can only be provided with fragment props\n * @param {ReactElement} fragment\n */\n\n\nfunction validateFragmentProps(fragment) {\n  // TODO: Move this to render phase instead of at element creation.\n  {\n    var keys = Object.keys(fragment.props);\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (key !== 'children' && key !== 'key') {\n        setCurrentlyValidatingElement(fragment);\n\n        error('Invalid prop `%s` supplied to `React.Fragment`. ' + 'React.Fragment can only have `key` and `children` props.', key);\n\n        setCurrentlyValidatingElement(null);\n        break;\n      }\n    }\n\n    if (fragment.ref !== null) {\n      setCurrentlyValidatingElement(fragment);\n\n      error('Invalid attribute `ref` supplied to `React.Fragment`.');\n\n      setCurrentlyValidatingElement(null);\n    }\n  }\n}\n\nvar jsxDEV = jsxDEV$1 ;\n\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsxDEV = jsxDEV;\n  })();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js":
/*!******************************************************************!*\
  !*** ./node_modules/next/dist/compiled/react/jsx-dev-runtime.js ***!
  \******************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("\n\nif (false) {} else {\n  module.exports = __webpack_require__(/*! ./cjs/react-jsx-dev-runtime.development.js */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/cjs/react-jsx-dev-runtime.development.js\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9uZXh0L2Rpc3QvY29tcGlsZWQvcmVhY3QvanN4LWRldi1ydW50aW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhOztBQUViLElBQUksS0FBcUMsRUFBRSxFQUUxQyxDQUFDO0FBQ0YsRUFBRSw4TEFBc0U7QUFDeEUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL25leHQvZGlzdC9jb21waWxlZC9yZWFjdC9qc3gtZGV2LXJ1bnRpbWUuanM/MzIxYiJdLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gIG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9janMvcmVhY3QtanN4LWRldi1ydW50aW1lLnByb2R1Y3Rpb24ubWluLmpzJyk7XG59IGVsc2Uge1xuICBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4vY2pzL3JlYWN0LWpzeC1kZXYtcnVudGltZS5kZXZlbG9wbWVudC5qcycpO1xufVxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@storyblok/react/dist/bridge-loader.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@storyblok/react/dist/bridge-loader.mjs ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ i; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storyblok-js.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-js.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\nconst t = async (e)=>{\n    await (0,_storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_1__.loadStoryblokBridge)(), new window.StoryblokBridge(e).on([\n        \"published\",\n        \"change\"\n    ], ()=>{\n        window.location.reload();\n    });\n}, i = (param)=>{\n    let { options: e } = param;\n    return t(e), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null);\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3QvYnJpZGdlLWxvYWRlci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OzZEQUNzQjtBQUN3QztBQUM5RCxNQUFNRyxJQUFJLE9BQU9DO0lBQ2YsTUFBTUYsc0VBQUNBLElBQUksSUFBSUcsT0FBT0MsZUFBZSxDQUFDRixHQUFHRyxFQUFFLENBQUM7UUFBQztRQUFhO0tBQVMsRUFBRTtRQUNuRUYsT0FBT0csUUFBUSxDQUFDQyxNQUFNO0lBQ3hCO0FBQ0YsR0FBR0MsSUFBSTtRQUFDLEVBQUVDLFNBQVNQLENBQUMsRUFBRTtXQUFNRCxFQUFFQyxJQUFJLGFBQWEsaUJBQUdKLGdEQUFlLENBQUNBLDJDQUFVLEVBQUU7O0FBRzVFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3QvYnJpZGdlLWxvYWRlci5tanM/OWI5MyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcbmltcG9ydCBvIGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgbG9hZFN0b3J5Ymxva0JyaWRnZSBhcyByIH0gZnJvbSBcIi4vc3RvcnlibG9rLWpzLm1qc1wiO1xuY29uc3QgdCA9IGFzeW5jIChlKSA9PiB7XG4gIGF3YWl0IHIoKSwgbmV3IHdpbmRvdy5TdG9yeWJsb2tCcmlkZ2UoZSkub24oW1wicHVibGlzaGVkXCIsIFwiY2hhbmdlXCJdLCAoKSA9PiB7XG4gICAgd2luZG93LmxvY2F0aW9uLnJlbG9hZCgpO1xuICB9KTtcbn0sIGkgPSAoeyBvcHRpb25zOiBlIH0pID0+ICh0KGUpLCAvKiBAX19QVVJFX18gKi8gby5jcmVhdGVFbGVtZW50KG8uRnJhZ21lbnQsIG51bGwpKTtcbmV4cG9ydCB7XG4gIGkgYXMgZGVmYXVsdFxufTtcbiJdLCJuYW1lcyI6WyJvIiwibG9hZFN0b3J5Ymxva0JyaWRnZSIsInIiLCJ0IiwiZSIsIndpbmRvdyIsIlN0b3J5Ymxva0JyaWRnZSIsIm9uIiwibG9jYXRpb24iLCJyZWxvYWQiLCJpIiwib3B0aW9ucyIsImNyZWF0ZUVsZW1lbnQiLCJGcmFnbWVudCIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@storyblok/react/dist/bridge-loader.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@storyblok/react/dist/client.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@storyblok/react/dist/client.mjs ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   useStoryblokState: function() { return /* binding */ n; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storyblok-js.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-js.mjs\");\n\n\nconst n = (e = null, d = {}) => {\n  const [f, s] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(e), o = (e == null ? void 0 : e.internalId) ?? (e == null ? void 0 : e.id) ?? 0, r = typeof window < \"u\" && typeof window.storyblokRegisterEvent < \"u\";\n  return (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(() => {\n    s(e), !(!r || !e) && (0,_storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_1__.registerStoryblokBridge)(\n      o,\n      (u) => s(u),\n      d\n    );\n  }, [e]), f;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3QvY2xpZW50Lm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBc0Q7QUFDWTtBQUNsRSwyQkFBMkI7QUFDM0IsaUJBQWlCLCtDQUFDO0FBQ2xCLFNBQVMsZ0RBQUM7QUFDVix5QkFBeUIsMEVBQUM7QUFDMUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0b3J5Ymxvay9yZWFjdC9kaXN0L2NsaWVudC5tanM/NDc5OCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyB1c2VTdGF0ZSBhcyBjLCB1c2VFZmZlY3QgYXMgcCB9IGZyb20gXCJyZWFjdFwiO1xuaW1wb3J0IHsgcmVnaXN0ZXJTdG9yeWJsb2tCcmlkZ2UgYXMgYiB9IGZyb20gXCIuL3N0b3J5Ymxvay1qcy5tanNcIjtcbmNvbnN0IG4gPSAoZSA9IG51bGwsIGQgPSB7fSkgPT4ge1xuICBjb25zdCBbZiwgc10gPSBjKGUpLCBvID0gKGUgPT0gbnVsbCA/IHZvaWQgMCA6IGUuaW50ZXJuYWxJZCkgPz8gKGUgPT0gbnVsbCA/IHZvaWQgMCA6IGUuaWQpID8/IDAsIHIgPSB0eXBlb2Ygd2luZG93IDwgXCJ1XCIgJiYgdHlwZW9mIHdpbmRvdy5zdG9yeWJsb2tSZWdpc3RlckV2ZW50IDwgXCJ1XCI7XG4gIHJldHVybiBwKCgpID0+IHtcbiAgICBzKGUpLCAhKCFyIHx8ICFlKSAmJiBiKFxuICAgICAgbyxcbiAgICAgICh1KSA9PiBzKHUpLFxuICAgICAgZFxuICAgICk7XG4gIH0sIFtlXSksIGY7XG59O1xuZXhwb3J0IHtcbiAgbiBhcyB1c2VTdG9yeWJsb2tTdGF0ZVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@storyblok/react/dist/client.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@storyblok/react/dist/index2.mjs":
/*!*******************************************************!*\
  !*** ./node_modules/@storyblok/react/dist/index2.mjs ***!
  \*******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RichTextResolver: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.RichTextResolver; },\n/* harmony export */   RichTextSchema: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.RichTextSchema; },\n/* harmony export */   StoryblokComponent: function() { return /* reexport safe */ _storyblok_component_mjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"]; },\n/* harmony export */   apiPlugin: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.apiPlugin; },\n/* harmony export */   getComponent: function() { return /* binding */ i; },\n/* harmony export */   getCustomFallbackComponent: function() { return /* binding */ m; },\n/* harmony export */   getEnableFallbackComponent: function() { return /* binding */ k; },\n/* harmony export */   getStoryblokApi: function() { return /* binding */ b; },\n/* harmony export */   loadStoryblokBridge: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.loadStoryblokBridge; },\n/* harmony export */   registerStoryblokBridge: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.registerStoryblokBridge; },\n/* harmony export */   renderRichText: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.renderRichText; },\n/* harmony export */   setComponents: function() { return /* binding */ c; },\n/* harmony export */   storyblokEditable: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.storyblokEditable; },\n/* harmony export */   storyblokInit: function() { return /* binding */ p; },\n/* harmony export */   useStoryblokApi: function() { return /* binding */ b; },\n/* harmony export */   useStoryblokBridge: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.registerStoryblokBridge; }\n/* harmony export */ });\n/* harmony import */ var _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./storyblok-js.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-js.mjs\");\n/* harmony import */ var _storyblok_component_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./storyblok-component.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-component.mjs\");\n\n\n\nlet t = null, e = {}, r = !1, l = null;\nconst b = () => (t || console.error(\n  \"You can't use getStoryblokApi if you're not loading apiPlugin.\"\n), t), c = (o) => (e = o, e), i = (o) => e[o] ? e[o] : (console.error(`Component ${o} doesn't exist.`), !1), k = () => r, m = () => l, p = (o = {}) => {\n  const { storyblokApi: n } = (0,_storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_0__.storyblokInit)(o);\n  t = n, e = o.components, r = o.enableFallbackComponent, l = o.customFallbackComponent;\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3QvaW5kZXgyLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBd0Q7QUFDMks7QUFDMUs7QUFDekQsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQSxtRkFBbUYsR0FBRyw0REFBNEQ7QUFDbEosVUFBVSxrQkFBa0IsRUFBRSxnRUFBQztBQUMvQjtBQUNBO0FBa0JFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3QvaW5kZXgyLm1qcz9hNTJlIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHN0b3J5Ymxva0luaXQgYXMgcyB9IGZyb20gXCIuL3N0b3J5Ymxvay1qcy5tanNcIjtcbmltcG9ydCB7IFJpY2hUZXh0UmVzb2x2ZXIgYXMgZywgUmljaFRleHRTY2hlbWEgYXMgQywgYXBpUGx1Z2luIGFzIGQsIGxvYWRTdG9yeWJsb2tCcmlkZ2UgYXMgZiwgcmVnaXN0ZXJTdG9yeWJsb2tCcmlkZ2UgYXMgUywgcmVuZGVyUmljaFRleHQgYXMgeCwgc3RvcnlibG9rRWRpdGFibGUgYXMgRiwgcmVnaXN0ZXJTdG9yeWJsb2tCcmlkZ2UgYXMgQSB9IGZyb20gXCIuL3N0b3J5Ymxvay1qcy5tanNcIjtcbmltcG9ydCB7IGRlZmF1bHQgYXMgQiB9IGZyb20gXCIuL3N0b3J5Ymxvay1jb21wb25lbnQubWpzXCI7XG5sZXQgdCA9IG51bGwsIGUgPSB7fSwgciA9ICExLCBsID0gbnVsbDtcbmNvbnN0IGIgPSAoKSA9PiAodCB8fCBjb25zb2xlLmVycm9yKFxuICBcIllvdSBjYW4ndCB1c2UgZ2V0U3RvcnlibG9rQXBpIGlmIHlvdSdyZSBub3QgbG9hZGluZyBhcGlQbHVnaW4uXCJcbiksIHQpLCBjID0gKG8pID0+IChlID0gbywgZSksIGkgPSAobykgPT4gZVtvXSA/IGVbb10gOiAoY29uc29sZS5lcnJvcihgQ29tcG9uZW50ICR7b30gZG9lc24ndCBleGlzdC5gKSwgITEpLCBrID0gKCkgPT4gciwgbSA9ICgpID0+IGwsIHAgPSAobyA9IHt9KSA9PiB7XG4gIGNvbnN0IHsgc3RvcnlibG9rQXBpOiBuIH0gPSBzKG8pO1xuICB0ID0gbiwgZSA9IG8uY29tcG9uZW50cywgciA9IG8uZW5hYmxlRmFsbGJhY2tDb21wb25lbnQsIGwgPSBvLmN1c3RvbUZhbGxiYWNrQ29tcG9uZW50O1xufTtcbmV4cG9ydCB7XG4gIGcgYXMgUmljaFRleHRSZXNvbHZlcixcbiAgQyBhcyBSaWNoVGV4dFNjaGVtYSxcbiAgQiBhcyBTdG9yeWJsb2tDb21wb25lbnQsXG4gIGQgYXMgYXBpUGx1Z2luLFxuICBpIGFzIGdldENvbXBvbmVudCxcbiAgbSBhcyBnZXRDdXN0b21GYWxsYmFja0NvbXBvbmVudCxcbiAgayBhcyBnZXRFbmFibGVGYWxsYmFja0NvbXBvbmVudCxcbiAgYiBhcyBnZXRTdG9yeWJsb2tBcGksXG4gIGYgYXMgbG9hZFN0b3J5Ymxva0JyaWRnZSxcbiAgUyBhcyByZWdpc3RlclN0b3J5Ymxva0JyaWRnZSxcbiAgeCBhcyByZW5kZXJSaWNoVGV4dCxcbiAgYyBhcyBzZXRDb21wb25lbnRzLFxuICBGIGFzIHN0b3J5Ymxva0VkaXRhYmxlLFxuICBwIGFzIHN0b3J5Ymxva0luaXQsXG4gIGIgYXMgdXNlU3RvcnlibG9rQXBpLFxuICBBIGFzIHVzZVN0b3J5Ymxva0JyaWRnZVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@storyblok/react/dist/index2.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@storyblok/react/dist/rsc.mjs":
/*!****************************************************!*\
  !*** ./node_modules/@storyblok/react/dist/rsc.mjs ***!
  \****************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BridgeLoader: function() { return /* reexport safe */ _bridge_loader_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   RichTextResolver: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__.RichTextResolver; },\n/* harmony export */   RichTextSchema: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__.RichTextSchema; },\n/* harmony export */   StoryblokBridgeLoader: function() { return /* reexport safe */ _bridge_loader_mjs__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; },\n/* harmony export */   StoryblokComponent: function() { return /* reexport safe */ _storyblok_component_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"]; },\n/* harmony export */   StoryblokStory: function() { return /* reexport safe */ _story_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"]; },\n/* harmony export */   apiPlugin: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__.apiPlugin; },\n/* harmony export */   getComponent: function() { return /* reexport safe */ _index2_mjs__WEBPACK_IMPORTED_MODULE_1__.getComponent; },\n/* harmony export */   getCustomFallbackComponent: function() { return /* reexport safe */ _index2_mjs__WEBPACK_IMPORTED_MODULE_1__.getCustomFallbackComponent; },\n/* harmony export */   getEnableFallbackComponent: function() { return /* reexport safe */ _index2_mjs__WEBPACK_IMPORTED_MODULE_1__.getEnableFallbackComponent; },\n/* harmony export */   getStoryblokApi: function() { return /* reexport safe */ _index2_mjs__WEBPACK_IMPORTED_MODULE_1__.useStoryblokApi; },\n/* harmony export */   loadStoryblokBridge: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__.loadStoryblokBridge; },\n/* harmony export */   registerStoryblokBridge: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__.registerStoryblokBridge; },\n/* harmony export */   renderRichText: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__.renderRichText; },\n/* harmony export */   setComponents: function() { return /* reexport safe */ _index2_mjs__WEBPACK_IMPORTED_MODULE_1__.setComponents; },\n/* harmony export */   storyblokEditable: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__.storyblokEditable; },\n/* harmony export */   storyblokInit: function() { return /* reexport safe */ _index2_mjs__WEBPACK_IMPORTED_MODULE_1__.storyblokInit; },\n/* harmony export */   useStoryblokApi: function() { return /* reexport safe */ _index2_mjs__WEBPACK_IMPORTED_MODULE_1__.useStoryblokApi; },\n/* harmony export */   useStoryblokBridge: function() { return /* reexport safe */ _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__.registerStoryblokBridge; }\n/* harmony export */ });\n/* harmony import */ var _bridge_loader_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bridge-loader.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/bridge-loader.mjs\");\n/* harmony import */ var _index2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index2.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/index2.mjs\");\n/* harmony import */ var _story_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./story.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/story.mjs\");\n/* harmony import */ var _storyblok_component_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./storyblok-component.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-component.mjs\");\n/* harmony import */ var _storyblok_js_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./storyblok-js.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-js.mjs\");\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3QvcnNjLm1qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFBaUU7QUFDc0k7QUFDNUo7QUFDYztBQUMwSztBQXFCak8iLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vbm9kZV9tb2R1bGVzL0BzdG9yeWJsb2svcmVhY3QvZGlzdC9yc2MubWpzP2VkNjEiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZGVmYXVsdCBhcyB0LCBkZWZhdWx0IGFzIHIgfSBmcm9tIFwiLi9icmlkZ2UtbG9hZGVyLm1qc1wiO1xuaW1wb3J0IHsgZ2V0Q29tcG9uZW50IGFzIGEsIGdldEN1c3RvbUZhbGxiYWNrQ29tcG9uZW50IGFzIGksIGdldEVuYWJsZUZhbGxiYWNrQ29tcG9uZW50IGFzIHMsIHVzZVN0b3J5Ymxva0FwaSBhcyBiLCBzZXRDb21wb25lbnRzIGFzIGQsIHN0b3J5Ymxva0luaXQgYXMgaywgdXNlU3RvcnlibG9rQXBpIGFzIG4gfSBmcm9tIFwiLi9pbmRleDIubWpzXCI7XG5pbXBvcnQgeyBkZWZhdWx0IGFzIGcgfSBmcm9tIFwiLi9zdG9yeS5tanNcIjtcbmltcG9ydCB7IGRlZmF1bHQgYXMgbSB9IGZyb20gXCIuL3N0b3J5Ymxvay1jb21wb25lbnQubWpzXCI7XG5pbXBvcnQgeyBSaWNoVGV4dFJlc29sdmVyIGFzIGYsIFJpY2hUZXh0U2NoZW1hIGFzIHUsIGFwaVBsdWdpbiBhcyB4LCBsb2FkU3RvcnlibG9rQnJpZGdlIGFzIGMsIHJlZ2lzdGVyU3RvcnlibG9rQnJpZGdlIGFzIEIsIHJlbmRlclJpY2hUZXh0IGFzIEMsIHN0b3J5Ymxva0VkaXRhYmxlIGFzIGgsIHJlZ2lzdGVyU3RvcnlibG9rQnJpZGdlIGFzIFIgfSBmcm9tIFwiLi9zdG9yeWJsb2stanMubWpzXCI7XG5leHBvcnQge1xuICB0IGFzIEJyaWRnZUxvYWRlcixcbiAgZiBhcyBSaWNoVGV4dFJlc29sdmVyLFxuICB1IGFzIFJpY2hUZXh0U2NoZW1hLFxuICByIGFzIFN0b3J5Ymxva0JyaWRnZUxvYWRlcixcbiAgbSBhcyBTdG9yeWJsb2tDb21wb25lbnQsXG4gIGcgYXMgU3RvcnlibG9rU3RvcnksXG4gIHggYXMgYXBpUGx1Z2luLFxuICBhIGFzIGdldENvbXBvbmVudCxcbiAgaSBhcyBnZXRDdXN0b21GYWxsYmFja0NvbXBvbmVudCxcbiAgcyBhcyBnZXRFbmFibGVGYWxsYmFja0NvbXBvbmVudCxcbiAgYiBhcyBnZXRTdG9yeWJsb2tBcGksXG4gIGMgYXMgbG9hZFN0b3J5Ymxva0JyaWRnZSxcbiAgQiBhcyByZWdpc3RlclN0b3J5Ymxva0JyaWRnZSxcbiAgQyBhcyByZW5kZXJSaWNoVGV4dCxcbiAgZCBhcyBzZXRDb21wb25lbnRzLFxuICBoIGFzIHN0b3J5Ymxva0VkaXRhYmxlLFxuICBrIGFzIHN0b3J5Ymxva0luaXQsXG4gIG4gYXMgdXNlU3RvcnlibG9rQXBpLFxuICBSIGFzIHVzZVN0b3J5Ymxva0JyaWRnZVxufTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@storyblok/react/dist/rsc.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@storyblok/react/dist/story.mjs":
/*!******************************************************!*\
  !*** ./node_modules/@storyblok/react/dist/story.mjs ***!
  \******************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ S; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _client_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./client.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/client.mjs\");\n/* harmony import */ var _storyblok_component_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./storyblok-component.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-component.mjs\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \n\n\nconst S = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(_c = (param, n)=>{\n    let { story: t, bridgeOptions: o, ...e } = param;\n    return typeof t.content == \"string\" && (t.content = JSON.parse(t.content)), t = (0,_client_mjs__WEBPACK_IMPORTED_MODULE_1__.useStoryblokState)(t, o), /* @__PURE__ */ /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createElement(_storyblok_component_mjs__WEBPACK_IMPORTED_MODULE_2__[\"default\"], {\n        ref: n,\n        blok: t.content,\n        ...e\n    });\n});\n_c1 = S;\n\nvar _c, _c1;\n$RefreshReg$(_c, \"S$f\");\n$RefreshReg$(_c1, \"S\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3Qvc3RvcnkubWpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7NkRBQzJDO0FBQ1c7QUFDWjtBQUMxQyxNQUFNTSxrQkFBSUosaURBQUNBLE1BQ1QsUUFBdUNLO1FBQXRDLEVBQUVDLE9BQU9DLENBQUMsRUFBRUMsZUFBZUMsQ0FBQyxFQUFFLEdBQUdDLEdBQUc7V0FBUyxPQUFPSCxFQUFFSSxPQUFPLElBQUksWUFBYUosQ0FBQUEsRUFBRUksT0FBTyxHQUFHQyxLQUFLQyxLQUFLLENBQUNOLEVBQUVJLE9BQU8sSUFBSUosSUFBSUwsOERBQUNBLENBQUNLLEdBQUdFLElBQUksYUFBYSxpQkFBR1gsZ0RBQWUsQ0FBQ0ssZ0VBQUNBLEVBQUU7UUFBRVksS0FBS1Y7UUFBR1csTUFBTVQsRUFBRUksT0FBTztRQUFFLEdBQUdELENBQUM7SUFBQzs7O0FBSW5NIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3Qvc3RvcnkubWpzPzgxNGIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5pbXBvcnQgciwgeyBmb3J3YXJkUmVmIGFzIGYgfSBmcm9tIFwicmVhY3RcIjtcbmltcG9ydCB7IHVzZVN0b3J5Ymxva1N0YXRlIGFzIG0gfSBmcm9tIFwiLi9jbGllbnQubWpzXCI7XG5pbXBvcnQgYSBmcm9tIFwiLi9zdG9yeWJsb2stY29tcG9uZW50Lm1qc1wiO1xuY29uc3QgUyA9IGYoXG4gICh7IHN0b3J5OiB0LCBicmlkZ2VPcHRpb25zOiBvLCAuLi5lIH0sIG4pID0+ICh0eXBlb2YgdC5jb250ZW50ID09IFwic3RyaW5nXCIgJiYgKHQuY29udGVudCA9IEpTT04ucGFyc2UodC5jb250ZW50KSksIHQgPSBtKHQsIG8pLCAvKiBAX19QVVJFX18gKi8gci5jcmVhdGVFbGVtZW50KGEsIHsgcmVmOiBuLCBibG9rOiB0LmNvbnRlbnQsIC4uLmUgfSkpXG4pO1xuZXhwb3J0IHtcbiAgUyBhcyBkZWZhdWx0XG59O1xuIl0sIm5hbWVzIjpbInIiLCJmb3J3YXJkUmVmIiwiZiIsInVzZVN0b3J5Ymxva1N0YXRlIiwibSIsImEiLCJTIiwibiIsInN0b3J5IiwidCIsImJyaWRnZU9wdGlvbnMiLCJvIiwiZSIsImNvbnRlbnQiLCJKU09OIiwicGFyc2UiLCJjcmVhdGVFbGVtZW50IiwicmVmIiwiYmxvayIsImRlZmF1bHQiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@storyblok/react/dist/story.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-component.mjs":
/*!********************************************************************!*\
  !*** ./node_modules/@storyblok/react/dist/storyblok-component.mjs ***!
  \********************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": function() { return /* binding */ u; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var _index2_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index2.mjs */ \"(app-pages-browser)/./node_modules/@storyblok/react/dist/index2.mjs\");\n\n\nconst u = (0,react__WEBPACK_IMPORTED_MODULE_0__.forwardRef)(\n  ({ blok: t, ...o }, l) => {\n    if (!t)\n      return console.error(\n        \"Please provide a 'blok' property to the StoryblokComponent\"\n      ), /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null, \"Please provide a blok property to the StoryblokComponent\");\n    const n = (0,_index2_mjs__WEBPACK_IMPORTED_MODULE_1__.getComponent)(t.component);\n    if (n)\n      return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(n, { ref: l, blok: t, ...o });\n    if ((0,_index2_mjs__WEBPACK_IMPORTED_MODULE_1__.getEnableFallbackComponent)()) {\n      const r = (0,_index2_mjs__WEBPACK_IMPORTED_MODULE_1__.getCustomFallbackComponent)();\n      return r ? /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(r, { blok: t, ...o }) : /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(react__WEBPACK_IMPORTED_MODULE_0__.Fragment, null, /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"p\", null, \"Component could not be found for blok\", \" \", /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"strong\", null, t.component), \"! Is it configured correctly?\"));\n    }\n    return /* @__PURE__ */ react__WEBPACK_IMPORTED_MODULE_0__.createElement(\"div\", null);\n  }\n);\nu.displayName = \"StoryblokComponent\";\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL25vZGVfbW9kdWxlcy9Ac3RvcnlibG9rL3JlYWN0L2Rpc3Qvc3RvcnlibG9rLWNvbXBvbmVudC5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTJDO0FBQ3dFO0FBQ25ILFVBQVUsaURBQUM7QUFDWCxLQUFLLGVBQWU7QUFDcEI7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLGdEQUFlO0FBQ3hDLGNBQWMseURBQUM7QUFDZjtBQUNBLDZCQUE2QixnREFBZSxNQUFNLHVCQUF1QjtBQUN6RSxRQUFRLHVFQUFDO0FBQ1QsZ0JBQWdCLHVFQUFDO0FBQ2pCLGlDQUFpQyxnREFBZSxNQUFNLGVBQWUsb0JBQW9CLGdEQUFlLENBQUMsMkNBQVUsd0JBQXdCLGdEQUFlLDBFQUEwRSxnREFBZTtBQUNuUDtBQUNBLDJCQUEyQixnREFBZTtBQUMxQztBQUNBO0FBQ0E7QUFHRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9ub2RlX21vZHVsZXMvQHN0b3J5Ymxvay9yZWFjdC9kaXN0L3N0b3J5Ymxvay1jb21wb25lbnQubWpzP2M0OTMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGUsIHsgZm9yd2FyZFJlZiBhcyBtIH0gZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBnZXRDb21wb25lbnQgYXMgYSwgZ2V0RW5hYmxlRmFsbGJhY2tDb21wb25lbnQgYXMgcCwgZ2V0Q3VzdG9tRmFsbGJhY2tDb21wb25lbnQgYXMgYyB9IGZyb20gXCIuL2luZGV4Mi5tanNcIjtcbmNvbnN0IHUgPSBtKFxuICAoeyBibG9rOiB0LCAuLi5vIH0sIGwpID0+IHtcbiAgICBpZiAoIXQpXG4gICAgICByZXR1cm4gY29uc29sZS5lcnJvcihcbiAgICAgICAgXCJQbGVhc2UgcHJvdmlkZSBhICdibG9rJyBwcm9wZXJ0eSB0byB0aGUgU3RvcnlibG9rQ29tcG9uZW50XCJcbiAgICAgICksIC8qIEBfX1BVUkVfXyAqLyBlLmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCwgXCJQbGVhc2UgcHJvdmlkZSBhIGJsb2sgcHJvcGVydHkgdG8gdGhlIFN0b3J5Ymxva0NvbXBvbmVudFwiKTtcbiAgICBjb25zdCBuID0gYSh0LmNvbXBvbmVudCk7XG4gICAgaWYgKG4pXG4gICAgICByZXR1cm4gLyogQF9fUFVSRV9fICovIGUuY3JlYXRlRWxlbWVudChuLCB7IHJlZjogbCwgYmxvazogdCwgLi4ubyB9KTtcbiAgICBpZiAocCgpKSB7XG4gICAgICBjb25zdCByID0gYygpO1xuICAgICAgcmV0dXJuIHIgPyAvKiBAX19QVVJFX18gKi8gZS5jcmVhdGVFbGVtZW50KHIsIHsgYmxvazogdCwgLi4ubyB9KSA6IC8qIEBfX1BVUkVfXyAqLyBlLmNyZWF0ZUVsZW1lbnQoZS5GcmFnbWVudCwgbnVsbCwgLyogQF9fUFVSRV9fICovIGUuY3JlYXRlRWxlbWVudChcInBcIiwgbnVsbCwgXCJDb21wb25lbnQgY291bGQgbm90IGJlIGZvdW5kIGZvciBibG9rXCIsIFwiIFwiLCAvKiBAX19QVVJFX18gKi8gZS5jcmVhdGVFbGVtZW50KFwic3Ryb25nXCIsIG51bGwsIHQuY29tcG9uZW50KSwgXCIhIElzIGl0IGNvbmZpZ3VyZWQgY29ycmVjdGx5P1wiKSk7XG4gICAgfVxuICAgIHJldHVybiAvKiBAX19QVVJFX18gKi8gZS5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwpO1xuICB9XG4pO1xudS5kaXNwbGF5TmFtZSA9IFwiU3RvcnlibG9rQ29tcG9uZW50XCI7XG5leHBvcnQge1xuICB1IGFzIGRlZmF1bHRcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-component.mjs\n"));

/***/ }),

/***/ "(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-js.mjs":
/*!*************************************************************!*\
  !*** ./node_modules/@storyblok/react/dist/storyblok-js.mjs ***!
  \*************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RichTextResolver: function() { return /* binding */ v; },\n/* harmony export */   RichTextSchema: function() { return /* binding */ ne; },\n/* harmony export */   apiPlugin: function() { return /* binding */ pe; },\n/* harmony export */   isRichTextEmpty: function() { return /* binding */ de; },\n/* harmony export */   loadStoryblokBridge: function() { return /* binding */ be; },\n/* harmony export */   registerStoryblokBridge: function() { return /* binding */ fe; },\n/* harmony export */   renderRichText: function() { return /* binding */ ye; },\n/* harmony export */   storyblokEditable: function() { return /* binding */ ge; },\n/* harmony export */   storyblokInit: function() { return /* binding */ me; },\n/* harmony export */   useStoryblokBridge: function() { return /* binding */ fe; }\n/* harmony export */ });\nlet _ = !1;\nconst j = [], O = (n) => new Promise((e, t) => {\n  if (typeof window > \"u\" || (window.storyblokRegisterEvent = (r) => {\n    if (window.location === window.parent.location) {\n      console.warn(\"You are not in Draft Mode or in the Visual Editor.\");\n      return;\n    }\n    _ ? r() : j.push(r);\n  }, document.getElementById(\"storyblok-javascript-bridge\"))) return;\n  const s = document.createElement(\"script\");\n  s.async = !0, s.src = n, s.id = \"storyblok-javascript-bridge\", s.onerror = (r) => t(r), s.onload = (r) => {\n    j.forEach((o) => o()), _ = !0, e(r);\n  }, document.getElementsByTagName(\"head\")[0].appendChild(s);\n});\nvar P = Object.defineProperty, C = (n, e, t) => e in n ? P(n, e, { enumerable: !0, configurable: !0, writable: !0, value: t }) : n[e] = t, c = (n, e, t) => C(n, typeof e != \"symbol\" ? e + \"\" : e, t);\nfunction x(n) {\n  return !(n !== n || n === 1 / 0 || n === -1 / 0);\n}\nfunction I(n, e, t) {\n  if (!x(e))\n    throw new TypeError(\"Expected `limit` to be a finite number\");\n  if (!x(t))\n    throw new TypeError(\"Expected `interval` to be a finite number\");\n  const s = [];\n  let r = [], o = 0;\n  const i = function() {\n    o++;\n    const a = setTimeout(function() {\n      o--, s.length > 0 && i(), r = r.filter(function(h) {\n        return h !== a;\n      });\n    }, t);\n    r.indexOf(a) < 0 && r.push(a);\n    const u = s.shift();\n    u.resolve(n.apply(u.self, u.args));\n  }, l = function(...a) {\n    const u = this;\n    return new Promise(function(h, d) {\n      s.push({\n        resolve: h,\n        reject: d,\n        args: a,\n        self: u\n      }), o < e && i();\n    });\n  };\n  return l.abort = function() {\n    r.forEach(clearTimeout), r = [], s.forEach(function(a) {\n      a.reject(function() {\n        Error.call(this, \"Throttled function aborted\"), this.name = \"AbortError\";\n      });\n    }), s.length = 0;\n  }, l;\n}\nclass b {\n  constructor() {\n    c(this, \"isCDNUrl\", (e = \"\") => e.indexOf(\"/cdn/\") > -1), c(this, \"getOptionsPage\", (e, t = 25, s = 1) => ({\n      ...e,\n      per_page: t,\n      page: s\n    })), c(this, \"delay\", (e) => new Promise((t) => setTimeout(t, e))), c(this, \"arrayFrom\", (e = 0, t) => [...Array(e)].map(t)), c(this, \"range\", (e = 0, t = e) => {\n      const s = Math.abs(t - e) || 0, r = e < t ? 1 : -1;\n      return this.arrayFrom(s, (o, i) => i * r + e);\n    }), c(this, \"asyncMap\", async (e, t) => Promise.all(e.map(t))), c(this, \"flatMap\", (e = [], t) => e.map(t).reduce((s, r) => [...s, ...r], [])), c(this, \"escapeHTML\", function(e) {\n      const t = {\n        \"&\": \"&amp;\",\n        \"<\": \"&lt;\",\n        \">\": \"&gt;\",\n        '\"': \"&quot;\",\n        \"'\": \"&#39;\"\n      }, s = /[&<>\"']/g, r = RegExp(s.source);\n      return e && r.test(e) ? e.replace(s, (o) => t[o]) : e;\n    });\n  }\n  /**\n   * @method stringify\n   * @param  {Object} params\n   * @param  {String} prefix\n   * @param  {Boolean} isArray\n   * @return {String} Stringified object\n   */\n  stringify(e, t, s) {\n    const r = [];\n    for (const o in e) {\n      if (!Object.prototype.hasOwnProperty.call(e, o))\n        continue;\n      const i = e[o], l = s ? \"\" : encodeURIComponent(o);\n      let a;\n      typeof i == \"object\" ? a = this.stringify(\n        i,\n        t ? t + encodeURIComponent(\"[\" + l + \"]\") : l,\n        Array.isArray(i)\n      ) : a = (t ? t + encodeURIComponent(\"[\" + l + \"]\") : l) + \"=\" + encodeURIComponent(i), r.push(a);\n    }\n    return r.join(\"&\");\n  }\n  /**\n   * @method getRegionURL\n   * @param  {String} regionCode region code, could be eu, us, cn, ap or ca\n   * @return {String} The base URL of the region\n   */\n  getRegionURL(e) {\n    const t = \"api.storyblok.com\", s = \"api-us.storyblok.com\", r = \"app.storyblokchina.cn\", o = \"api-ap.storyblok.com\", i = \"api-ca.storyblok.com\";\n    switch (e) {\n      case \"us\":\n        return s;\n      case \"cn\":\n        return r;\n      case \"ap\":\n        return o;\n      case \"ca\":\n        return i;\n      default:\n        return t;\n    }\n  }\n}\nconst A = function(n, e) {\n  const t = {};\n  for (const s in n) {\n    const r = n[s];\n    e.indexOf(s) > -1 && r !== null && (t[s] = r);\n  }\n  return t;\n}, N = (n) => n === \"email\", L = () => ({\n  singleTag: \"hr\"\n}), M = () => ({\n  tag: \"blockquote\"\n}), H = () => ({\n  tag: \"ul\"\n}), U = (n) => ({\n  tag: [\n    \"pre\",\n    {\n      tag: \"code\",\n      attrs: n.attrs\n    }\n  ]\n}), z = () => ({\n  singleTag: \"br\"\n}), q = (n) => ({\n  tag: `h${n.attrs.level}`\n}), B = (n) => ({\n  singleTag: [\n    {\n      tag: \"img\",\n      attrs: A(n.attrs, [\"src\", \"alt\", \"title\"])\n    }\n  ]\n}), D = () => ({\n  tag: \"li\"\n}), V = () => ({\n  tag: \"ol\"\n}), J = () => ({\n  tag: \"p\"\n}), F = (n) => ({\n  tag: [\n    {\n      tag: \"span\",\n      attrs: {\n        \"data-type\": \"emoji\",\n        \"data-name\": n.attrs.name,\n        emoji: n.attrs.emoji\n      }\n    }\n  ]\n}), W = () => ({\n  tag: \"b\"\n}), Y = () => ({\n  tag: \"s\"\n}), K = () => ({\n  tag: \"u\"\n}), Q = () => ({\n  tag: \"strong\"\n}), X = () => ({\n  tag: \"code\"\n}), Z = () => ({\n  tag: \"i\"\n}), G = (n) => {\n  if (!n.attrs)\n    return {\n      tag: \"\"\n    };\n  const e = new b().escapeHTML, t = { ...n.attrs }, { linktype: s = \"url\" } = n.attrs;\n  if (delete t.linktype, t.href && (t.href = e(n.attrs.href || \"\")), N(s) && (t.href = `mailto:${t.href}`), t.anchor && (t.href = `${t.href}#${t.anchor}`, delete t.anchor), t.custom) {\n    for (const r in t.custom)\n      t[r] = t.custom[r];\n    delete t.custom;\n  }\n  return {\n    tag: [\n      {\n        tag: \"a\",\n        attrs: t\n      }\n    ]\n  };\n}, ee = (n) => ({\n  tag: [\n    {\n      tag: \"span\",\n      attrs: n.attrs\n    }\n  ]\n}), te = () => ({\n  tag: \"sub\"\n}), se = () => ({\n  tag: \"sup\"\n}), re = (n) => ({\n  tag: [\n    {\n      tag: \"span\",\n      attrs: n.attrs\n    }\n  ]\n}), oe = (n) => {\n  var e;\n  return (e = n.attrs) != null && e.color ? {\n    tag: [\n      {\n        tag: \"span\",\n        attrs: {\n          style: `background-color:${n.attrs.color};`\n        }\n      }\n    ]\n  } : {\n    tag: \"\"\n  };\n}, ie = (n) => {\n  var e;\n  return (e = n.attrs) != null && e.color ? {\n    tag: [\n      {\n        tag: \"span\",\n        attrs: {\n          style: `color:${n.attrs.color}`\n        }\n      }\n    ]\n  } : {\n    tag: \"\"\n  };\n}, ne = {\n  nodes: {\n    horizontal_rule: L,\n    blockquote: M,\n    bullet_list: H,\n    code_block: U,\n    hard_break: z,\n    heading: q,\n    image: B,\n    list_item: D,\n    ordered_list: V,\n    paragraph: J,\n    emoji: F\n  },\n  marks: {\n    bold: W,\n    strike: Y,\n    underline: K,\n    strong: Q,\n    code: X,\n    italic: Z,\n    link: G,\n    styled: ee,\n    subscript: te,\n    superscript: se,\n    anchor: re,\n    highlight: oe,\n    textStyle: ie\n  }\n}, ae = function(n) {\n  const e = {\n    \"&\": \"&amp;\",\n    \"<\": \"&lt;\",\n    \">\": \"&gt;\",\n    '\"': \"&quot;\",\n    \"'\": \"&#39;\"\n  }, t = /[&<>\"']/g, s = RegExp(t.source);\n  return n && s.test(n) ? n.replace(t, (r) => e[r]) : n;\n};\nclass le {\n  constructor(e) {\n    c(this, \"marks\"), c(this, \"nodes\"), e || (e = ne), this.marks = e.marks || [], this.nodes = e.nodes || [];\n  }\n  addNode(e, t) {\n    this.nodes[e] = t;\n  }\n  addMark(e, t) {\n    this.marks[e] = t;\n  }\n  render(e, t = { optimizeImages: !1 }) {\n    if (console.warn(\n      \"Warning ⚠️: The RichTextResolver class is deprecated and will be removed in the next major release. Please use the `@storyblok/richtext` package instead. https://github.com/storyblok/richtext/\"\n    ), e && e.content && Array.isArray(e.content)) {\n      let s = \"\";\n      return e.content.forEach((r) => {\n        s += this.renderNode(r);\n      }), t.optimizeImages ? this.optimizeImages(s, t.optimizeImages) : s;\n    }\n    return console.warn(\n      `The render method must receive an Object with a \"content\" field.\n\t\t\tThe \"content\" field must be an array of nodes as the type ISbRichtext.\n\t\t\tISbRichtext:\n\t\t\t\tcontent?: ISbRichtext[]\n\t\t\t\tmarks?: ISbRichtext[]\n\t\t\t\tattrs?: any\n\t\t\t\ttext?: string\n\t\t\t\ttype: string\n\t\t\t\t\n\t\t\t\tExample:\n\t\t\t\t{\n\t\t\t\t\tcontent: [\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tcontent: [\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\ttext: 'Hello World',\n\t\t\t\t\t\t\t\t\ttype: 'text'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t],\n\t\t\t\t\t\t\ttype: 'paragraph'\n\t\t\t\t\t\t}\n\t\t\t\t\t],\n\t\t\t\t\ttype: 'doc'\n\t\t\t\t}`\n    ), \"\";\n  }\n  optimizeImages(e, t) {\n    let s = 0, r = 0, o = \"\", i = \"\";\n    typeof t != \"boolean\" && (typeof t.width == \"number\" && t.width > 0 && (o += `width=\"${t.width}\" `, s = t.width), typeof t.height == \"number\" && t.height > 0 && (o += `height=\"${t.height}\" `, r = t.height), (t.loading === \"lazy\" || t.loading === \"eager\") && (o += `loading=\"${t.loading}\" `), typeof t.class == \"string\" && t.class.length > 0 && (o += `class=\"${t.class}\" `), t.filters && (typeof t.filters.blur == \"number\" && t.filters.blur >= 0 && t.filters.blur <= 100 && (i += `:blur(${t.filters.blur})`), typeof t.filters.brightness == \"number\" && t.filters.brightness >= -100 && t.filters.brightness <= 100 && (i += `:brightness(${t.filters.brightness})`), t.filters.fill && (t.filters.fill.match(/[0-9A-Fa-f]{6}/g) || t.filters.fill === \"transparent\") && (i += `:fill(${t.filters.fill})`), t.filters.format && [\"webp\", \"png\", \"jpeg\"].includes(t.filters.format) && (i += `:format(${t.filters.format})`), typeof t.filters.grayscale == \"boolean\" && t.filters.grayscale && (i += \":grayscale()\"), typeof t.filters.quality == \"number\" && t.filters.quality >= 0 && t.filters.quality <= 100 && (i += `:quality(${t.filters.quality})`), t.filters.rotate && [90, 180, 270].includes(t.filters.rotate) && (i += `:rotate(${t.filters.rotate})`), i.length > 0 && (i = \"/filters\" + i))), o.length > 0 && (e = e.replace(/<img/g, `<img ${o.trim()}`));\n    const l = s > 0 || r > 0 || i.length > 0 ? `${s}x${r}${i}` : \"\";\n    return e = e.replace(\n      /a.storyblok.com\\/f\\/(\\d+)\\/([^.]+)\\.(gif|jpg|jpeg|png|tif|tiff|bmp)/g,\n      `a.storyblok.com/f/$1/$2.$3/m/${l}`\n    ), typeof t != \"boolean\" && (t.sizes || t.srcset) && (e = e.replace(/<img.*?src=[\"|'](.*?)[\"|']/g, (a) => {\n      var u, h;\n      const d = a.match(\n        /a.storyblok.com\\/f\\/(\\d+)\\/([^.]+)\\.(gif|jpg|jpeg|png|tif|tiff|bmp)/g\n      );\n      if (d && d.length > 0) {\n        const g = {\n          srcset: (u = t.srcset) == null ? void 0 : u.map((p) => {\n            if (typeof p == \"number\")\n              return `//${d}/m/${p}x0${i} ${p}w`;\n            if (typeof p == \"object\" && p.length === 2) {\n              let k = 0, $ = 0;\n              return typeof p[0] == \"number\" && (k = p[0]), typeof p[1] == \"number\" && ($ = p[1]), `//${d}/m/${k}x${$}${i} ${k}w`;\n            }\n          }).join(\", \"),\n          sizes: (h = t.sizes) == null ? void 0 : h.map((p) => p).join(\", \")\n        };\n        let f = \"\";\n        return g.srcset && (f += `srcset=\"${g.srcset}\" `), g.sizes && (f += `sizes=\"${g.sizes}\" `), a.replace(/<img/g, `<img ${f.trim()}`);\n      }\n      return a;\n    })), e;\n  }\n  renderNode(e) {\n    const t = [];\n    e.marks && e.marks.forEach((r) => {\n      const o = this.getMatchingMark(r);\n      o && o.tag !== \"\" && t.push(this.renderOpeningTag(o.tag));\n    });\n    const s = this.getMatchingNode(e);\n    return s && s.tag && t.push(this.renderOpeningTag(s.tag)), e.content ? e.content.forEach((r) => {\n      t.push(this.renderNode(r));\n    }) : e.text ? t.push(ae(e.text)) : s && s.singleTag ? t.push(this.renderTag(s.singleTag, \" /\")) : s && s.html ? t.push(s.html) : e.type === \"emoji\" && t.push(this.renderEmoji(e)), s && s.tag && t.push(this.renderClosingTag(s.tag)), e.marks && e.marks.slice(0).reverse().forEach((r) => {\n      const o = this.getMatchingMark(r);\n      o && o.tag !== \"\" && t.push(this.renderClosingTag(o.tag));\n    }), t.join(\"\");\n  }\n  renderTag(e, t) {\n    return e.constructor === String ? `<${e}${t}>` : e.map((s) => {\n      if (s.constructor === String)\n        return `<${s}${t}>`;\n      {\n        let r = `<${s.tag}`;\n        if (s.attrs) {\n          for (const o in s.attrs)\n            if (Object.prototype.hasOwnProperty.call(s.attrs, o)) {\n              const i = s.attrs[o];\n              i !== null && (r += ` ${o}=\"${i}\"`);\n            }\n        }\n        return `${r}${t}>`;\n      }\n    }).join(\"\");\n  }\n  renderOpeningTag(e) {\n    return this.renderTag(e, \"\");\n  }\n  renderClosingTag(e) {\n    return e.constructor === String ? `</${e}>` : e.slice(0).reverse().map((t) => t.constructor === String ? `</${t}>` : `</${t.tag}>`).join(\"\");\n  }\n  getMatchingNode(e) {\n    const t = this.nodes[e.type];\n    if (typeof t == \"function\")\n      return t(e);\n  }\n  getMatchingMark(e) {\n    const t = this.marks[e.type];\n    if (typeof t == \"function\")\n      return t(e);\n  }\n  renderEmoji(e) {\n    if (e.attrs.emoji)\n      return e.attrs.emoji;\n    const t = [\n      {\n        tag: \"img\",\n        attrs: {\n          src: e.attrs.fallbackImage,\n          draggable: \"false\",\n          loading: \"lazy\",\n          align: \"absmiddle\"\n        }\n      }\n    ];\n    return this.renderTag(t, \" /\");\n  }\n}\nconst v = le;\nclass ce {\n  constructor(e) {\n    c(this, \"baseURL\"), c(this, \"timeout\"), c(this, \"headers\"), c(this, \"responseInterceptor\"), c(this, \"fetch\"), c(this, \"ejectInterceptor\"), c(this, \"url\"), c(this, \"parameters\"), c(this, \"fetchOptions\"), this.baseURL = e.baseURL, this.headers = e.headers || new Headers(), this.timeout = e != null && e.timeout ? e.timeout * 1e3 : 0, this.responseInterceptor = e.responseInterceptor, this.fetch = (...t) => e.fetch ? e.fetch(...t) : fetch(...t), this.ejectInterceptor = !1, this.url = \"\", this.parameters = {}, this.fetchOptions = {};\n  }\n  /**\n   *\n   * @param url string\n   * @param params ISbStoriesParams\n   * @returns Promise<ISbResponse | Error>\n   */\n  get(e, t) {\n    return this.url = e, this.parameters = t, this._methodHandler(\"get\");\n  }\n  post(e, t) {\n    return this.url = e, this.parameters = t, this._methodHandler(\"post\");\n  }\n  put(e, t) {\n    return this.url = e, this.parameters = t, this._methodHandler(\"put\");\n  }\n  delete(e, t) {\n    return this.url = e, this.parameters = t, this._methodHandler(\"delete\");\n  }\n  async _responseHandler(e) {\n    const t = [], s = {\n      data: {},\n      headers: {},\n      status: 0,\n      statusText: \"\"\n    };\n    e.status !== 204 && await e.json().then((r) => {\n      s.data = r;\n    });\n    for (const r of e.headers.entries())\n      t[r[0]] = r[1];\n    return s.headers = { ...t }, s.status = e.status, s.statusText = e.statusText, s;\n  }\n  async _methodHandler(e) {\n    let t = `${this.baseURL}${this.url}`, s = null;\n    if (e === \"get\") {\n      const a = new b();\n      t = `${this.baseURL}${this.url}?${a.stringify(\n        this.parameters\n      )}`;\n    } else\n      s = JSON.stringify(this.parameters);\n    const r = new URL(t), o = new AbortController(), { signal: i } = o;\n    let l;\n    this.timeout && (l = setTimeout(() => o.abort(), this.timeout));\n    try {\n      const a = await this.fetch(`${r}`, {\n        method: e,\n        headers: this.headers,\n        body: s,\n        signal: i,\n        ...this.fetchOptions\n      });\n      this.timeout && clearTimeout(l);\n      const u = await this._responseHandler(\n        a\n      );\n      return this.responseInterceptor && !this.ejectInterceptor ? this._statusHandler(this.responseInterceptor(u)) : this._statusHandler(u);\n    } catch (a) {\n      return {\n        message: a\n      };\n    }\n  }\n  setFetchOptions(e = {}) {\n    Object.keys(e).length > 0 && \"method\" in e && delete e.method, this.fetchOptions = { ...e };\n  }\n  eject() {\n    this.ejectInterceptor = !0;\n  }\n  _statusHandler(e) {\n    const t = /20[0-6]/g;\n    return new Promise((s, r) => {\n      if (t.test(`${e.status}`))\n        return s(e);\n      const o = {\n        message: e.statusText,\n        status: e.status,\n        response: Array.isArray(e.data) ? e.data[0] : e.data.error || e.data.slug\n      };\n      r(o);\n    });\n  }\n}\nconst he = ce, S = \"SB-Agent\", w = {\n  defaultAgentName: \"SB-JS-CLIENT\",\n  defaultAgentVersion: \"SB-Agent-Version\",\n  packageVersion: \"6.0.0\"\n};\nlet y = {};\nconst m = {};\nclass ue {\n  /**\n   *\n   * @param config ISbConfig interface\n   * @param endpoint string, optional\n   */\n  constructor(e, t) {\n    c(this, \"client\"), c(this, \"maxRetries\"), c(this, \"retriesDelay\"), c(this, \"throttle\"), c(this, \"accessToken\"), c(this, \"cache\"), c(this, \"helpers\"), c(this, \"resolveCounter\"), c(this, \"relations\"), c(this, \"links\"), c(this, \"richTextResolver\"), c(this, \"resolveNestedRelations\"), c(this, \"stringifiedStoriesCache\");\n    let s = e.endpoint || t;\n    if (!s) {\n      const i = new b().getRegionURL, l = e.https === !1 ? \"http\" : \"https\";\n      e.oauthToken ? s = `${l}://${i(e.region)}/v1` : s = `${l}://${i(e.region)}/v2`;\n    }\n    const r = new Headers();\n    r.set(\"Content-Type\", \"application/json\"), r.set(\"Accept\", \"application/json\"), e.headers && (e.headers.constructor.name === \"Headers\" ? e.headers.entries().toArray() : Object.entries(e.headers)).forEach(([i, l]) => {\n      r.set(i, l);\n    }), r.has(S) || (r.set(S, w.defaultAgentName), r.set(\n      w.defaultAgentVersion,\n      w.packageVersion\n    ));\n    let o = 5;\n    e.oauthToken && (r.set(\"Authorization\", e.oauthToken), o = 3), e.rateLimit && (o = e.rateLimit), e.richTextSchema ? this.richTextResolver = new v(e.richTextSchema) : this.richTextResolver = new v(), e.componentResolver && this.setComponentResolver(e.componentResolver), this.maxRetries = e.maxRetries || 10, this.retriesDelay = 300, this.throttle = I(this.throttledRequest, o, 1e3), this.accessToken = e.accessToken || \"\", this.relations = {}, this.links = {}, this.cache = e.cache || { clear: \"manual\" }, this.helpers = new b(), this.resolveCounter = 0, this.resolveNestedRelations = e.resolveNestedRelations || !0, this.stringifiedStoriesCache = {}, this.client = new he({\n      baseURL: s,\n      timeout: e.timeout || 0,\n      headers: r,\n      responseInterceptor: e.responseInterceptor,\n      fetch: e.fetch\n    });\n  }\n  setComponentResolver(e) {\n    this.richTextResolver.addNode(\"blok\", (t) => {\n      let s = \"\";\n      return t.attrs.body && t.attrs.body.forEach((r) => {\n        s += e(r.component, r);\n      }), {\n        html: s\n      };\n    });\n  }\n  parseParams(e) {\n    return e.token || (e.token = this.getToken()), e.cv || (e.cv = m[e.token]), Array.isArray(e.resolve_relations) && (e.resolve_relations = e.resolve_relations.join(\",\")), typeof e.resolve_relations < \"u\" && (e.resolve_level = 2), e;\n  }\n  factoryParamOptions(e, t) {\n    return this.helpers.isCDNUrl(e) ? this.parseParams(t) : t;\n  }\n  makeRequest(e, t, s, r, o) {\n    const i = this.factoryParamOptions(\n      e,\n      this.helpers.getOptionsPage(t, s, r)\n    );\n    return this.cacheResponse(e, i, void 0, o);\n  }\n  get(e, t, s) {\n    t || (t = {});\n    const r = `/${e}`, o = this.factoryParamOptions(r, t);\n    return this.cacheResponse(r, o, void 0, s);\n  }\n  async getAll(e, t, s, r) {\n    const o = (t == null ? void 0 : t.per_page) || 25, i = `/${e}`, l = i.split(\"/\"), a = s || l[l.length - 1], u = 1, h = await this.makeRequest(\n      i,\n      t,\n      o,\n      u,\n      r\n    ), d = h.total ? Math.ceil(h.total / o) : 1, g = await this.helpers.asyncMap(\n      this.helpers.range(u, d),\n      (f) => this.makeRequest(i, t, o, f + 1, r)\n    );\n    return this.helpers.flatMap(\n      [h, ...g],\n      (f) => Object.values(f.data[a])\n    );\n  }\n  post(e, t, s) {\n    const r = `/${e}`;\n    return Promise.resolve(this.throttle(\"post\", r, t, s));\n  }\n  put(e, t, s) {\n    const r = `/${e}`;\n    return Promise.resolve(this.throttle(\"put\", r, t, s));\n  }\n  delete(e, t, s) {\n    const r = `/${e}`;\n    return Promise.resolve(this.throttle(\"delete\", r, t, s));\n  }\n  getStories(e, t) {\n    return this._addResolveLevel(e), this.get(\"cdn/stories\", e, t);\n  }\n  getStory(e, t, s) {\n    return this._addResolveLevel(t), this.get(`cdn/stories/${e}`, t, s);\n  }\n  getToken() {\n    return this.accessToken;\n  }\n  ejectInterceptor() {\n    this.client.eject();\n  }\n  _addResolveLevel(e) {\n    typeof e.resolve_relations < \"u\" && (e.resolve_level = 2);\n  }\n  _cleanCopy(e) {\n    return JSON.parse(JSON.stringify(e));\n  }\n  _insertLinks(e, t, s) {\n    const r = e[t];\n    r && r.fieldtype == \"multilink\" && r.linktype == \"story\" && typeof r.id == \"string\" && this.links[s][r.id] ? r.story = this._cleanCopy(this.links[s][r.id]) : r && r.linktype === \"story\" && typeof r.uuid == \"string\" && this.links[s][r.uuid] && (r.story = this._cleanCopy(this.links[s][r.uuid]));\n  }\n  /**\n   *\n   * @param resolveId A counter number as a string\n   * @param uuid The uuid of the story\n   * @returns string | object\n   */\n  getStoryReference(e, t) {\n    return this.relations[e][t] ? (this.stringifiedStoriesCache[t] || (this.stringifiedStoriesCache[t] = JSON.stringify(\n      this.relations[e][t]\n    )), JSON.parse(this.stringifiedStoriesCache[t])) : t;\n  }\n  _insertRelations(e, t, s, r) {\n    s.indexOf(`${e.component}.${t}`) > -1 && (typeof e[t] == \"string\" ? e[t] = this.getStoryReference(r, e[t]) : Array.isArray(e[t]) && (e[t] = e[t].map((o) => this.getStoryReference(r, o)).filter(Boolean)));\n  }\n  iterateTree(e, t, s) {\n    const r = (o) => {\n      if (o != null) {\n        if (o.constructor === Array)\n          for (let i = 0; i < o.length; i++)\n            r(o[i]);\n        else if (o.constructor === Object) {\n          if (o._stopResolving)\n            return;\n          for (const i in o)\n            (o.component && o._uid || o.type === \"link\") && (this._insertRelations(\n              o,\n              i,\n              t,\n              s\n            ), this._insertLinks(\n              o,\n              i,\n              s\n            )), r(o[i]);\n        }\n      }\n    };\n    r(e.content);\n  }\n  async resolveLinks(e, t, s) {\n    let r = [];\n    if (e.link_uuids) {\n      const o = e.link_uuids.length, i = [], l = 50;\n      for (let a = 0; a < o; a += l) {\n        const u = Math.min(o, a + l);\n        i.push(e.link_uuids.slice(a, u));\n      }\n      for (let a = 0; a < i.length; a++)\n        (await this.getStories({\n          per_page: l,\n          language: t.language,\n          version: t.version,\n          by_uuids: i[a].join(\",\")\n        })).data.stories.forEach(\n          (u) => {\n            r.push(u);\n          }\n        );\n    } else\n      r = e.links;\n    r.forEach((o) => {\n      this.links[s][o.uuid] = {\n        ...o,\n        _stopResolving: !0\n      };\n    });\n  }\n  async resolveRelations(e, t, s) {\n    let r = [];\n    if (e.rel_uuids) {\n      const o = e.rel_uuids.length, i = [], l = 50;\n      for (let a = 0; a < o; a += l) {\n        const u = Math.min(o, a + l);\n        i.push(e.rel_uuids.slice(a, u));\n      }\n      for (let a = 0; a < i.length; a++)\n        (await this.getStories({\n          per_page: l,\n          language: t.language,\n          version: t.version,\n          by_uuids: i[a].join(\",\"),\n          excluding_fields: t.excluding_fields\n        })).data.stories.forEach((u) => {\n          r.push(u);\n        });\n    } else\n      r = e.rels;\n    r && r.length > 0 && r.forEach((o) => {\n      this.relations[s][o.uuid] = {\n        ...o,\n        _stopResolving: !0\n      };\n    });\n  }\n  /**\n   *\n   * @param responseData\n   * @param params\n   * @param resolveId\n   * @description Resolves the relations and links of the stories\n   * @returns Promise<void>\n   *\n   */\n  async resolveStories(e, t, s) {\n    var r, o;\n    let i = [];\n    if (this.links[s] = {}, this.relations[s] = {}, typeof t.resolve_relations < \"u\" && t.resolve_relations.length > 0 && (typeof t.resolve_relations == \"string\" && (i = t.resolve_relations.split(\",\")), await this.resolveRelations(e, t, s)), t.resolve_links && [\"1\", \"story\", \"url\", \"link\"].indexOf(t.resolve_links) > -1 && ((r = e.links) != null && r.length || (o = e.link_uuids) != null && o.length) && await this.resolveLinks(e, t, s), this.resolveNestedRelations)\n      for (const l in this.relations[s])\n        this.iterateTree(\n          this.relations[s][l],\n          i,\n          s\n        );\n    e.story ? this.iterateTree(e.story, i, s) : e.stories.forEach((l) => {\n      this.iterateTree(l, i, s);\n    }), this.stringifiedStoriesCache = {}, delete this.links[s], delete this.relations[s];\n  }\n  async cacheResponse(e, t, s, r) {\n    const o = this.helpers.stringify({ url: e, params: t }), i = this.cacheProvider();\n    if (this.cache.clear === \"auto\" && t.version === \"draft\" && await this.flushCache(), t.version === \"published\" && e != \"/cdn/spaces/me\") {\n      const l = await i.get(o);\n      if (l)\n        return Promise.resolve(l);\n    }\n    return new Promise(async (l, a) => {\n      var u;\n      try {\n        const h = await this.throttle(\"get\", e, t, r);\n        if (h.status !== 200)\n          return a(h);\n        let d = { data: h.data, headers: h.headers };\n        if ((u = h.headers) != null && u[\"per-page\"] && (d = Object.assign({}, d, {\n          perPage: h.headers[\"per-page\"] ? parseInt(h.headers[\"per-page\"]) : 0,\n          total: h.headers[\"per-page\"] ? parseInt(h.headers.total) : 0\n        })), d.data.story || d.data.stories) {\n          const g = this.resolveCounter = ++this.resolveCounter % 1e3;\n          await this.resolveStories(d.data, t, `${g}`);\n        }\n        return t.version === \"published\" && e != \"/cdn/spaces/me\" && await i.set(o, d), d.data.cv && t.token && (t.version === \"draft\" && m[t.token] != d.data.cv && await this.flushCache(), m[t.token] = t.cv ? t.cv : d.data.cv), l(d);\n      } catch (h) {\n        if (h.response && h.status === 429 && (s = typeof s > \"u\" ? 0 : s + 1, s < this.maxRetries))\n          return console.log(\n            `Hit rate limit. Retrying in ${this.retriesDelay / 1e3} seconds.`\n          ), await this.helpers.delay(this.retriesDelay), this.cacheResponse(e, t, s).then(l).catch(a);\n        a(h);\n      }\n    });\n  }\n  throttledRequest(e, t, s, r) {\n    return this.client.setFetchOptions(r), this.client[e](t, s);\n  }\n  cacheVersions() {\n    return m;\n  }\n  cacheVersion() {\n    return m[this.accessToken];\n  }\n  setCacheVersion(e) {\n    this.accessToken && (m[this.accessToken] = e);\n  }\n  clearCacheVersion() {\n    this.accessToken && (m[this.accessToken] = 0);\n  }\n  cacheProvider() {\n    switch (this.cache.type) {\n      case \"memory\":\n        return {\n          get(e) {\n            return Promise.resolve(y[e]);\n          },\n          getAll() {\n            return Promise.resolve(y);\n          },\n          set(e, t) {\n            return y[e] = t, Promise.resolve(void 0);\n          },\n          flush() {\n            return y = {}, Promise.resolve(void 0);\n          }\n        };\n      case \"custom\":\n        if (this.cache.custom) return this.cache.custom;\n      default:\n        return {\n          get() {\n            return Promise.resolve();\n          },\n          getAll() {\n            return Promise.resolve(void 0);\n          },\n          set() {\n            return Promise.resolve(void 0);\n          },\n          flush() {\n            return Promise.resolve(void 0);\n          }\n        };\n    }\n  }\n  async flushCache() {\n    return await this.cacheProvider().flush(), this.clearCacheVersion(), this;\n  }\n}\nconst pe = (n = {}) => {\n  const { apiOptions: e } = n;\n  if (!e.accessToken) {\n    console.error(\n      \"You need to provide an access token to interact with Storyblok API. Read https://www.storyblok.com/docs/api/content-delivery#topics/authentication\"\n    );\n    return;\n  }\n  return { storyblokApi: new ue(e) };\n}, ge = (n) => {\n  if (typeof n != \"object\" || typeof n._editable > \"u\")\n    return {};\n  try {\n    const e = JSON.parse(\n      n._editable.replace(/^<!--#storyblok#/, \"\").replace(/-->$/, \"\")\n    );\n    return e ? {\n      \"data-blok-c\": JSON.stringify(e),\n      \"data-blok-uid\": e.id + \"-\" + e.uid\n    } : {};\n  } catch {\n    return {};\n  }\n};\nlet R, T = \"https://app.storyblok.com/f/storyblok-v2-latest.js\";\nconst fe = (n, e, t = {}) => {\n  var s;\n  const r = !(typeof window > \"u\") && typeof window.storyblokRegisterEvent < \"u\", o = +new URL((s = window.location) == null ? void 0 : s.href).searchParams.get(\n    \"_storyblok\"\n  ) === n;\n  if (!(!r || !o)) {\n    if (!n) {\n      console.warn(\"Story ID is not defined. Please provide a valid ID.\");\n      return;\n    }\n    window.storyblokRegisterEvent(() => {\n      new window.StoryblokBridge(t).on([\"input\", \"published\", \"change\"], (i) => {\n        i.action === \"input\" && i.story.id === n ? e(i.story) : (i.action === \"change\" || i.action === \"published\") && i.storyId === n && window.location.reload();\n      });\n    });\n  }\n}, me = (n = {}) => {\n  var e, t;\n  const {\n    bridge: s,\n    accessToken: r,\n    use: o = [],\n    apiOptions: i = {},\n    richText: l = {},\n    bridgeUrl: a\n  } = n;\n  i.accessToken = i.accessToken || r;\n  const u = { bridge: s, apiOptions: i };\n  let h = {};\n  o.forEach((g) => {\n    h = { ...h, ...g(u) };\n  }), a && (T = a);\n  const d = !(typeof window > \"u\") && ((t = (e = window.location) == null ? void 0 : e.search) == null ? void 0 : t.includes(\"_storyblok_tk\"));\n  return s !== !1 && d && O(T), R = new v(l.schema), l.resolver && E(R, l.resolver), h;\n}, E = (n, e) => {\n  n.addNode(\"blok\", (t) => {\n    let s = \"\";\n    return t.attrs.body.forEach((r) => {\n      s += e(r.component, r);\n    }), {\n      html: s\n    };\n  });\n}, de = (n) => !n || !(n != null && n.content.some((e) => e.content || e.type === \"blok\" || e.type === \"horizontal_rule\")), ye = (n, e, t) => {\n  let s = t || R;\n  if (!s) {\n    console.error(\n      \"Please initialize the Storyblok SDK before calling the renderRichText function\"\n    );\n    return;\n  }\n  return de(n) ? \"\" : (e && (s = new v(e.schema), e.resolver && E(s, e.resolver)), s.render(n));\n}, be = () => O(T);\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./node_modules/@storyblok/react/dist/storyblok-js.mjs\n"));

/***/ })

},
/******/ function(__webpack_require__) { // webpackRuntimeModules
/******/ var __webpack_exec__ = function(moduleId) { return __webpack_require__(__webpack_require__.s = moduleId); }
/******/ __webpack_require__.O(0, ["main-app"], function() { return __webpack_exec__("(app-pages-browser)/./node_modules/next/dist/build/webpack/loaders/next-flight-client-entry-loader.js?modules=%7B%22request%22%3A%22%2FUsers%2Fkiendang%2FGit%2Fdev-blog%2Fapp%2Farticles%2Fpage.tsx%22%2C%22ids%22%3A%5B%5D%7D&server=false!"); });
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ _N_E = __webpack_exports__;
/******/ }
]);